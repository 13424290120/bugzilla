use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'pages/release-notes.html.tmpl',
        'modtime' => '1483774492',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n";
#line 9 "template/en/default/pages/release-notes.html.tmpl"
$stash->set('title', 'Bugzilla 5.0 Release Notes');
#line 10 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $context->include('global/header.html.tmpl', { 'title' => $stash->get('title'), 'bodyclasses' => [ 'narrow_page' ] });
$output .=  "\n\n<h1>";
#line 15 "template/en/default/pages/release-notes.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('title');
    
    &$_tt_filter($output);
};

$output .=  "</h1>\n\n<ul class=\"bz_toc\">\n  <li><a href=\"#introduction\">Introduction</a></li>\n  <li><a href=\"#point\">Updates in this 5.0.x Release</a></li>\n  <li><a href=\"#req\">Minimum Requirements</a></li>\n  <li><a href=\"#feat\">New Features and Improvements</a></li>\n  <li><a href=\"#issues\">Outstanding Issues</a></li>\n  <li><a href=\"#code_changes\">Code Changes Which May Affect\n    Customizations and Extensions</a></li>\n  <li><a href=\"https://bugzilla.readthedocs.org/en/latest/installing/upgrading.html\">\n    Notes On Upgrading From a Previous Version</a></li>\n  <li><a href=\"http://www.bugzilla.org/releases/\">Release Notes for Previous Versions</a></li>\n</ul>\n\n<h2 id=\"introduction\">Introduction</h2>\n\n<p>Welcome to Bugzilla 5.0! It has been slightly over two years since we released\n  Bugzilla 4.4 in May of 2013. This new major release comes with many new features\n  and improvements to WebServices and performance.</p>\n\n<p>If you're upgrading, make sure to read\n  <a href=\"https://bugzilla.readthedocs.org/en/latest/installing/upgrading.html\">\n  Notes On Upgrading From a Previous Version</a>. If you are upgrading from a\n  release before 4.4, make sure to read the release notes for all the\n  <a href=\"http://www.bugzilla.org/releases/\">previous versions</a> in between\n  your version and this one, <strong>particularly the Upgrading section of each\n  version's release notes</strong>.</p>\n\n<h2 id=\"point\">Updates in this 5.0.x Release</h2>\n\n<h3>5.0.3</h3>\n\n<p>This release fixes one security issue. See the\n  <a href=\"https://www.bugzilla.org/security/4.4.11/\">Security Advisory</a>\n  for details.</p>\n\n<p>This release also contains the following ";
#line 52 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " fixes:</p>\n\n<ul>\n  <li>A regression in Bugzilla 5.0.2 caused <kbd>whine.pl</kbd> to be unable\n    to send emails due to a missing subroutine.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1235395\">";
#line 57 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1235395</a>)</li>\n  <li>The <kbd>Encode</kbd> module changed the way it encodes strings, causing\n    email addresses in emails sent by ";
#line 59 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
$output .=  " to be encoded,\n    preventing emails from being correctly delivered to recipients.\n    We now encode email headers correctly.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1246228\">";
#line 62 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1246228</a>)</li>\n  <li>Fix additional taint issues with Strawberry Perl.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=987742\">";
#line 64 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 987742</a> and\n    <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1089448\">";
#line 65 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " 1089448</a>)</li>\n  <li>When exporting a buglist as a CSV file, fields starting with either\n    \"=\", \"+\", \"-\" or \"\@\" are preceded by a space to not trigger formula\n    execution in Excel.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1259881\">";
#line 69 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1259881</a>)</li>\n  <li>An extension which allows user-controlled data to be used as a link in\n    tabs could trigger XSS if the data is not correctly sanitized.\n    ";
#line 72 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
$output .=  " no longer relies on the extension to do the sanity\n    check. A vanilla installation is not affected as no tab is user-controlled.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1250114\">";
#line 74 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1250114</a>)</li>\n  <li>Extensions can now easily override the favicon used for the\n    ";
#line 76 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
$output .=  " website.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1250264\">";
#line 77 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1250264</a>)</li>\n</ul>\n\n<h3>5.0.2</h3>\n\n<p>This release fixes two security issues. See the\n  <a href=\"https://www.bugzilla.org/security/4.2.15/\">Security Advisory</a>\n  for details.</p>\n\n<p>This release also contains the following ";
#line 86 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " fixes:</p>\n\n<ul>\n  <li>mod_perl now works correctly with mod_access_compat turned off on\n    Apache 2.4. To regenerate the <kbd>.htaccess</kbd> files, you must first\n    delete all existing ones in subdirectories:\n    <pre>find . -mindepth 2 -name .htaccess -exec rm -f {} \\;</pre>\n    You must then run <kbd>checksetup.pl</kbd> again to recreate them with\n    the correct syntax.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1223790\">";
#line 95 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1223790</a>)</li>\n  <li>Emails sent by ";
#line 96 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
$output .=  " are now correctly encoded as UTF-8.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=714724\">";
#line 97 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 714724</a>)</li>\n  <li>Strawberry Perl is now fully supported on Windows.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1089448\">";
#line 99 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1089448</a>\n    and <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=987742\">";
#line 100 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " 987742</a>)</li>\n  <li>The XML-RPC API now works with IIS on Windows.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=708252\">";
#line 102 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 708252</a>)</li>\n  <li>Some queries should now be faster on PostgreSQL.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1184431\">";
#line 104 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1184431</a>)</li>\n</ul>\n\n<h3>5.0.1</h3>\n\n<p>This release fixes one security issue. See the\n  <a href=\"https://www.bugzilla.org/security/4.2.14/\">Security Advisory</a>\n  for details.</p>\n\n<p>This release also contains the following ";
#line 113 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " fixes:</p>\n\n<ul>\n  <li>Users whose login name is not an email address could not log in on\n    installations which use LDAP to authenticate users.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1179160\">";
#line 118 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1179160</a>)</li>\n  <li>If a mandatory custom field was hidden, it was not possible to create\n    a new ";
#line 120 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " or to edit existing ones.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1183398\">";
#line 121 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1183398</a>\n    and <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1196969\">";
#line 122 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " 1196969</a>)</li>\n  <li>A user editing his login name to point to a non-existent email address\n    could cause Bugzilla to stop working, causing a denial of service.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1194987\">";
#line 125 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1194987</a>)</li>\n  <li>Emails generated during a transaction made PostgreSQL stop working.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1186700\">";
#line 127 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1186700</a>)</li>\n  <li>";
#line 128 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  " containing a comment with a reference to a ";
#line 128 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  "\n    ID larger than 2^31 could not be displayed anymore using PostgreSQL.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1191937\">";
#line 130 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1191937</a>)</li>\n  <li>The date picker in the \"Time Summary\" page was broken.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1181649\">";
#line 132 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1181649</a>)</li>\n  <li>If <kbd>Test::Taint</kbd> or any other Perl module required to use the\n    JSON-RPC API was not installed or was too old, the UI to tag comments was\n    displayed anyway, you could tag comments, but tags were not persistent\n    (they were lost on page reload). Now the UI to tag comments is not displayed\n    at all until the missing Perl modules are installed and up-to-date.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1183227\">";
#line 138 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1183227</a>)</li>\n  <li>Custom fields of type <kbd>INTEGER</kbd> now accept negative integers.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1198659\">";
#line 140 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1198659</a>)</li>\n  <li>On Windows, the <kbd>checksetup.pl</kbd> installation script no longer\n    asks for a SMTP server. It can be set after the installation is complete.\n    (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1191255\">";
#line 143 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " 1191255</a>)</li>\n</ul>\n\n<h2 id=\"req\">Minimum Requirements</h2>\n\n<p>Any requirements that are new since 4.4 will look like\n  <span class=\"req_new\">this</span>.</p>\n\n<ul>\n  <li><a href=\"#req_perl\">Perl</a></li>\n  <li><a href=\"#req_mysql\">For MySQL Users</a></li>\n  <li><a href=\"#req_pg\">For PostgreSQL Users</a></li>\n  <li><a href=\"#req_oracle\">For Oracle Users</a></li>\n  <li><a href=\"#req_sqlite\">For SQLite Users</a></li>\n  <li><a href=\"#req_modules\">Required Perl Modules</a></li>\n  <li><a href=\"#req_optional_mod\">Optional Perl Modules</a></li>\n  <li><a href=\"#req_apache\">Optional Apache Modules</a></li>\n</ul>\n\n<h3 id=\"req_perl\">Perl</h3>\n\n<p>Perl <span class=\"req_new\">v5.10.1</span></p>\n";
#line 166 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $context->include('db_req', { 'db' => 'mysql' });
$output .=  "\n";
#line 168 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $context->include('db_req', { 'db' => 'pg' });
$output .=  "\n";
#line 170 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $context->include('db_req', { 'db' => 'oracle' });
$output .=  "\n";
#line 172 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $context->include('db_req', { 'db' => 'sqlite' });
$output .=  "\n\n<h3 id=\"req_modules\">Required Perl Modules</h3>\n";
#line 176 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $context->include('req_table', { 'reqs' => $stash->get('REQUIRED_MODULES'), 'new' => [ 'File-Slurp', 'JSON-XS', 'Email-Sender' ], 'updated' => [ 'DateTime', 'DateTime-TimeZone', 'Template-Toolkit', 'URI' ] });
$output .=  "\n\n<h3 id=\"req_optional_mod\">Optional Perl Modules</h3>\n\n<p>The following perl modules, if installed, enable various\n  features of Bugzilla:</p>\n";
#line 186 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $context->include('req_table', { 'reqs' => $stash->get('OPTIONAL_MODULES'), 'new' => [ 'Cache-Memcached', 'File-Copy-Recursive' ], 'updated' => [ 'Chart', 'Test-Taint' ], 'include_feature' => 1 });
$output .=  "\n\n<h3 id=\"req_apache\">Optional Apache Modules</h3>\n\n<p>If you are using Apache as your webserver, Bugzilla can\n  take advantage of some Apache features if you have the below Apache\n  modules installed and enabled.</p>\n\n<ul>\n  <li>mod_headers</li>\n  <li>mod_expires</li>\n  <li>mod_env</li>\n</ul>\n\n<p>On most systems (but not on Windows), <kbd>checksetup.pl</kbd> is able to\n  tell whether or not you have these modules installed, and it will tell\n  you.</p>\n\n\n<h2 id=\"feat\">New Features and Improvements</h2>\n\n<ul>\n  <li><a href=\"#feat_webservices\">Improved WebServices</a></li>\n  <li><a href=\"#feat_caching_performance\">Improved Caching using Memcached</a></li>\n  <li><a href=\"#feat_comment_tags\">Abililty to Tag ";
#line 213 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " Comments</a></li>\n  <li><a href=\"#feat_bug_groups\">Improved ";
#line 214 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " Group Membership Checking</a></li>\n  <li><a href=\"#feat_documentation\">Improved Documentation for Users and Administrators</a></li>\n  <li><a href=\"#feat_other\">Other Enhancements and Changes</a></li>\n</ul>\n\n<h3 id=\"feat_webservices\">Improved WebServices</h3>\n\n<p>\n  This release has major improvements in the WebServices interface. One big\n  addition is a new REST-like endpoint alongside the existing XML-RPC and JSON-RPC\n  endpoints. This will allow clients to access Bugzilla data using standard HTTP\n  calls for easy development. <strong>Note:</strong> XML-RPC and JSON-RPC are\n  deprecated in favor of REST and will likely be removed in the Bugzilla 7.0 release.\n</p>\n<p>\n  Also API key support has been added so that API calls will no longer need to use\n  cookies or a user's login and password. Users can create a different API key for\n  each application and revoke API keys that have been compromised or are no longer\n  needed. The API key will simply be passed to each call as credentials.\n</p>\n<p>\n  Several methods have been added and existing ones improved to allow returning\n  data that was not available before such as <kbd>Group.get</kbd>. <kbd>B";
$output .=  "ug.search</kbd>\n  is now as full featured as the Advanced Query UI allowing for the same searches\n  to be executed. Attachment data such as flags and other metadata can now be\n  updated through the API. Other WebService changes are detailed\n  <a href=\"#feat_webservices_other\">below</a>.\n</p>\n\n<h3 id=\"feat_caching_performance\">Improved Caching using Memcached</h3>\n\n<p>\n  Bugzilla now has the ability to connect to a Memcached server running either\n  locally or on the network to allow fast access to different types of data.\n  This cuts down on the amount of database hits and can improve performance. Other\n  areas have been improved as well to take advantage of caching in memory for\n  objects that are retrieved multiple times during a request such as user data, etc.\n</p>\n\n<h3 id=\"feat_comment_tags\">Ability to Tag ";
#line 253 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " Comments</h3>\n\n<p>\n  Users can add tags, visible to other users, to ";
#line 256 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " comments. This\n  gives the users the ability to thread conversations, mark comments as spam,\n  identify important comments, etc. Users can hide comments that contain specific\n  tags if desired. The tag input field also supports autocompletion so commonly\n  used tags can be selected. Administrators can make specifically tagged comments\n  be automatically hidden from view.\n</p>\n\n<h3 id=\"feat_bug_groups\">Improved ";
#line 264 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " Group Membership Checking</h3>\n\n<p>\n  In the past, Bugzilla restricted who can view ";
#line 267 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'abug', 0]);
$output .=  " to everyone\n  who was a member of ALL the groups the ";
#line 268 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " was in. That is, the\n  groups were ANDed together. This made some access control scenarios rather\n  difficult to achieve. So now, Bugzilla defaults to (and can be switched to,\n  in existing installations) a mode where the ";
#line 271 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " can be viewed by\n  everyone who is a member of ANY group the ";
#line 272 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " is in. That is, the\n  groups are ORed together. This give more flexibility in the way ";
#line 273 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  "\n  are made private to specific groups of users.\n</p>\n<p>\n  <strong>Note:</strong> Group memberships for ";
#line 277 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  " and users are\n  not changed at all when this setting is switched. When switching from AND to\n  OR, this means that ";
#line 279 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  " may be more widely viewable than previously.\n  It is the responsibility of the administrator to make sure that no ";
#line 280 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  "\n  are accidentally revealed to the wrong people when changing this setting.\n</p>\n\n<h3 id=\"feat_documentation\">Improved Documentation for Users and Administrators</h3>\n\n<p>\n  The standard documentation that is shipped along with the Bugzilla code has been\n  rewritten and improved using the reStructuredText format. This allows the\n  documentation to be easily hosted at sites such as ReadTheDocs.org and can\n  also be more easily converted into different formats such as HTML and PDF.\n  A new section dedicated to the new REST WebService API has also been added,\n  significantly improving on the old WebService documentation.\n</p>\n\n<h3 id=\"feat_other\">Other Enhancements and Changes</h3>\n\n<h4>Enhancements for Users</h4>\n\n<ul>\n  <li><strong>";
#line 300 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  ":</strong> The deadline field is now visible to users\n    not in the the <kbd>timetracking</kbd> group.</li>\n  <li><strong>";
#line 302 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  ":</strong> There is now a \"Preview\" mode when\n    creating a new comment that allows you to see how the comment will look\n    before committing to the database.</li>\n  <li><strong>";
#line 305 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  ":</strong> The reporter is now allowed to enter\n    keywords at time of ";
#line 306 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " creation.</li>\n  <li><strong>";
#line 307 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  ":</strong> \"See Also\" now allows spaces as well as\n    commas to delimit multiple values.</li>\n  <li><strong>";
#line 309 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  ":</strong> Auto linkification in comments of ";
#line 309 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  "\n    IDs and comment IDs has been improved.</li>\n  <li><strong>";
#line 311 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  ":</strong> ";
#line 311 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  " can now have multiple\n    aliases assigned to them. Before each ";
#line 312 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " could only have a single\n    value. Also, aliases are now visible in the browser's title bar.</li>\n  <li><strong>";
#line 314 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  ":</strong> Users can now change the flags of multiple\n    ";
#line 315 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  " at once using the mass-edit form.</li>\n  <li><strong>Charts and Reports:</strong> UTF-8 characters are now correctly\n    displayed in \"New Charts\" and graphical reports.</li>\n  <li><strong>Charts and Reports:</strong> Custom multi-select fields are now\n    available as report axis options. This makes them usable for categorizing\n    ";
#line 320 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  " in reports.</li>\n  <li><strong>Email:</strong> You can now choose to not receive any mail at all\n    about a particular ";
#line 322 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ", even if you continue to have a role on\n    that ";
#line 323 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " (e.g. reporter).</li>\n  <li><strong>Email:</strong> When adding or removing ";
#line 324 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'abug', 0]);
$output .=  " as a\n    dependency, the summary of the ";
#line 325 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " is included in the email\n    notification.</li>\n  <li><strong>Requests:</strong> <kbd>request.cgi</kbd> can now output results in\n    CSV format.</li>\n  <li><strong>Requests:</strong><kbd> X-Bugzilla-*</kbd> headers are now included\n    in flag notification emails.</li>\n  <li><strong>Searches:</strong> Some useful searches have been added to the\n    Bugzilla home page.</li>\n  <li><strong>Searches:</strong> Quicksearch now allows for use of comparison\n    operators such as !=, >=, >, &lt;, etc., in addition to substring searches.</li>\n  <li><strong>Searches:</strong> The \"Blocks\" and \"Depends On\" values can now be\n    displayed as columns in ";
#line 336 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'abug', 0]);
$output .=  " list.</li>\n  <li><strong>Searches:</strong> The \"is empty\" and \"is not empty\" search operators\n    have been added to the Advanced Search UI. This allows searching for null\n    and not null values for certain fields.</li>\n</ul>\n\n<h4>Enhancements for Administrators and Developers</h4>\n\n<ul>\n  <li><strong>Administration:</strong> There are now <kbd>INTEGER</kbd> and\n    <kbd>DATE</kbd> custom field types.</li>\n  <li><strong>Administration:</strong> Filenames used to store product data for\n    \"Old Charts\" are now based on product IDs to avoid data loss when changing\n    product names.</li>\n  <li><strong>Administration:</strong> JavaScript and CSS files are now minified\n    and concatenated to improve page load performance. When changes are made,\n    <kbd>checksetup.pl</kbd> should be run to regenerate the combined files.</li>\n  <li><strong>";
#line 353 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  ":</strong> Bugzilla now keeps track of the last\n    time each user visited (that is, loaded the show_bug page in a web browser)\n    each ";
#line 355 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ". This could be useful for dashboards or API clients.</li>\n  <li><strong>Database:</strong> Text that contained unicode\n    supplementary characters (outside BMP) was cut off when using MySQL as backend.\n    This has been fixed to prevent data loss.</li>\n  <li><strong>Database:</strong> SSL connections are now possible when using\n    MySQL as backend.</li>\n  <li><strong>Database:</strong> For version 8.x of PostgreSQL, <kbd>plpgsql</kbd>\n    was not always installed by default and <kbd>checksetup.pl</kbd> would\n    generate an error. This has been fixed.</li>\n  <li><strong>Development:</strong> Bugzilla is now HTML5 compliant. As a\n    consequence, Internet Explorer 6 and 7 are no longer supported.</li>\n  <li><strong>Email:</strong> Email generation originally was done before the\n    jobqueue job was inserted. This is now delayed and done by\n    <kbd>jobqueue.pl</kbd> right before sending the email which can improve\n    responsiveness when processing ";
#line 369 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " changes.</li>\n  <li><strong>Email:</strong> When a site administrator creates a new user, an\n    email is sent to the user.</li>\n  <li><strong>Email:</strong> For dependency email notifications, the header\n    <kbd>X-B";
$output .=  "ugzilla-Type: dep_changed</kbd> is set.</li>\n  <li><strong>Email:</strong> <kbd>whine.pl</kbd> emails now use\n    <kbd>DEFAULT_COLUMN_LIST</kbd> (the same default columns seen in the buglist\n    page) instead of hard coded column list.</li>\n  <li><strong>Security:</strong> Support for increased values for\n    <kbd>PASSWORD_SALT_LENGTH</kbd> without breaking compatibility with old\n    hashes.</li>\n</ul>\n\n<h4 id=\"feat_webservices_other\">WebService Changes</h4>\n\n<ul>\n  <li><kbd>B";
$output .=  "ug.search</kbd> now allows for full search functionality\n    similar to what is possible using the Advanced Query UI.</li>\n  <li>Basic support for eTag headers has been added to all WebServices\n    to allow for better network performance.</li>\n  <li>Administrators can now change a parameter that filters all email\n    addresses returned in WebService calls similar to filtering that\n    happens in the web UI.</li>\n  <li>WebService calls now support use of API keys for authentication.\n    Usernames and passwords remain supported.</li>\n  <li>Invalid or expired authentication cookies and tokens now throw\n    errors instead of being silently ignored. <kbd>User.valid_login</kbd>\n    can be used to determine if they are still valid or not.</li>\n  <li>WebService calls that are used to create and update ";
#line 397 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  "\n    and attachments now support setting and updating of flags.</li>\n  <li><kbd>B";
$output .=  "ug.update_attachment</kbd> can update an attachment's\n    metadata as well as its flags.</li>\n  <li>The <kbd>product</kbd> parameter for <kbd>B";
$output .=  "ug.possible_duplicates</kbd>\n    has been renamed to <kbd>products</kbd>.</li>\n  <li>Some compatibility fields included in returned data that were marked\n    to be removed in this release are now gone.</li>\n  <li><kbd>Group.get</kbd> has been added to get information about a group and\n    its members.</li>\n  <li><kbd>FlagType.get</kbd> has been added to get information about valid\n    flag types for a given product and component.</li>\n  <li>The deprecated <kbd>B";
$output .=  "ug.get_bugs</kbd>, <kbd>B";
$output .=  "ug.get_history</kbd>\n    and <kbd>Product.get_products</kbd> methods are no longer supported.\n    They have been renamed to <kbd>B";
$output .=  "ug.get</kbd>, <kbd>B";
$output .=  "ug.history</kbd>\n    and <kbd>Product.get</kbd> respectively.</li>\n</ul>\n\n<h2 id=\"code_changes\">Code Changes Which May Affect Customizations and Extensions</h2>\n\n<ul>\n  <li>Support for CVS, Bonsai and LXR has been removed entirely when viewing\n    attachments. This means that the <kbd>cvsroot</kbd>, <kbd>cvsroot_get</kbd>,\n    <kbd>bonsai_url</kbd>, <kbd>lxr_url</kbd> and <kbd>lxr_root</kbd> parameters\n    are all gone, as well as <kbd>cvsbin</kbd> from the <kbd>localconfig</kbd>\n    file.</li>\n  <li>The <kbd>docs_urlbase</kbd> parameter has been removed. If documentation\n    has not been compiled locally, the \"Help\" links and other documentation links\n    will redirect to <a href=\"https://bugzilla.readthedocs.org\">bugzilla.readthedocs.org</a>\n    automatically.</li>\n  <li>The <kbd>mostfreqthreshold</kbd> parameter has also been removed.</li>\n  <li>All extensions which define new public WebService methods must list them\n    in a <kbd>PUBLIC_METHODS</kbd> constant. Methods which are not listed there\n    will not be accessible remotely.</li>\n  <li><kbd>JSON::XS</kbd> is now used instead of <kbd>Data::Dumper</kbd> for\n    storage on configuration values in <kbd>data/params</kbd>. This should\n    improve performance when loading the file.</li>\n  <li>A new test has been added to check for reserved words in SQL schema.</li>\n  <li><kbd>Pod::Coverage</kbd> is now used to ensure subroutines are documented.</li>\n  <li>Bugzilla code now uses <kbd>use parent</kbd> instead of <kbd>use base</kbd>\n    in all places applicable.</li>\n  <li>A new hook called <kbd>cgi_headers</kbd> has been added to allow\n    customization of the HTTP headers returned.</li>\n  <li>A new hook called <kbd>user_check_account_creation</kbd> has been added\n    to add extra checks before accepting the creation of a new user account.</li>\n</ul>\n";
#line 444 "template/en/default/pages/release-notes.html.tmpl"
$output .=  $context->include('global/footer.html.tmpl');
$output .=  "\n";

$output .=  "\n\n";

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {
        'req_table' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <table class=\"req_table\">\n    <tr>\n      <th>Module</th> <th>Version</th>";
#line 469 "template/en/default/pages/release-notes.html.tmpl"
if ($stash->get('include_feature')) {
$output .=  "\n        <th>Enables Feature</th>";
}

$output .=  "\n    </tr>";
#line 487 "template/en/default/pages/release-notes.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('reqs');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'req'} = $_tt_value;
$output .=  "\n      <tr>\n        <td ";
#line 473 "template/en/default/pages/release-notes.html.tmpl"
if ($stash->get(['new', 0, 'contains', [ $stash->get(['req', 0, 'package', 0]) ]])) {
$output .=  ' class="req_new"';
}

$output .=  ">";
#line 474 "template/en/default/pages/release-notes.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['req', 0, 'module', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</td>\n        <td ";
#line 475 "template/en/default/pages/release-notes.html.tmpl"
if ($stash->get(['updated', 0, 'contains', [ $stash->get(['req', 0, 'package', 0]) ]]) || $stash->get(['new', 0, 'contains', [ $stash->get(['req', 0, 'package', 0]) ]])) {
$output .=  ' class="req_new"';
}

$output .=  ">";
#line 481 "template/en/default/pages/release-notes.html.tmpl"
if ($stash->get(['req', 0, 'version', 0]) eq 0) {
$output .=  "\n            (Any)";
}
else {
#line 480 "template/en/default/pages/release-notes.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['req', 0, 'version', 0]);
    
    &$_tt_filter($output);
};

}

$output .=  "\n        </td>";
#line 485 "template/en/default/pages/release-notes.html.tmpl"
if ($stash->get('include_feature')) {
$output .=  "\n          <td>";
#line 484 "template/en/default/pages/release-notes.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['req', 0, 'feature', 0, 'join', [ ', ' ]]);
    
    &$_tt_filter($output);
};

$output .=  "</td>";
}

$output .=  "\n      </tr>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n</table>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'db_req' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 447 "template/en/default/pages/release-notes.html.tmpl"
$stash->set('m', $stash->get(['DB_MODULE', 0, $stash->get('db'), 0]));
$output .=  "\n  <h3 id=\"req_";
#line 448 "template/en/default/pages/release-notes.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('db');
    
    &$_tt_filter($output);
};

$output .=  "\">For ";
#line 448 "template/en/default/pages/release-notes.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['m', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  " Users</h3>\n\n  <ul>\n    <li>";
#line 451 "template/en/default/pages/release-notes.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['m', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\n       ";
#line 452 "template/en/default/pages/release-notes.html.tmpl"
if ($stash->get('db_new')) {
$output .=  '<span class="req_new">';
}

$output .=  "v";
#line 452 "template/en/default/pages/release-notes.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['m', 0, 'db_version', 0]);
    
    &$_tt_filter($output);
};

#line 453 "template/en/default/pages/release-notes.html.tmpl"
if ($stash->get('db_new')) {
$output .=  '</span>';
}

$output .=  "\n       </li>\n    <li><strong>perl module:</strong>\n      ";
#line 456 "template/en/default/pages/release-notes.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['m', 0, 'dbd', 0, 'module', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\n      ";
#line 457 "template/en/default/pages/release-notes.html.tmpl"
if ($stash->get('dbd_new')) {
$output .=  '<span class="req_new">';
}

$output .=  "v";
#line 457 "template/en/default/pages/release-notes.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['m', 0, 'dbd', 0, 'version', 0]);
    
    &$_tt_filter($output);
};

#line 458 "template/en/default/pages/release-notes.html.tmpl"
if ($stash->get('dbd_new')) {
$output .=  '</span>';
}

$output .=  "</li>\n  </ul>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    },
});
