use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'admin/params/attachment.html.tmpl',
        'modtime' => '1483774492',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 9 "template/en/default/admin/params/attachment.html.tmpl"
$stash->set('title', 'Attachments');
$stash->set('desc', 'Set up attachment options');
$output .=  "\n";
#line 1 "template/en/default/admin/params/attachment.html.tmpl"
$stash->set('param_descs', { 'allow_attachment_display' => 'If this option is on, users will be able to view attachments from'  . ' their browser, if their browser supports the attachment\'s MIME type.'  . ' If this option is off, users are forced to download attachments,'  . ' even if the browser is able to display them.'  . '<p>This is a security restriction for installations where untrusted'  . ' users may upload attachments that could be potentially damaging if'  . ' viewed directly in the browser.</p>'  . '<p>It is highly recommended that you set the <var>attachment_base</var>'  . ' parameter if you turn this parameter on.', 'attachment_base' => 'When the <var>allow_attachment_display</var> parameter is on, it is '  . ' possible for a malicious attachment to steal your cookies or'  . ' perform an attack on Bugzilla using your credentials.'  . '<p>If you would like additional security on attachments to avoid'  . ' this, set this parameter to an alternate URL for your Bugzilla'  . ' that is not the same as <var>urlbase</var> or <var>sslbase</var>.'  . ' That is, a different domain name that resolves to this exact'  . ' same Bugzilla installation.</p>'  . '<p>Note that if you have set the'  . ('' . " <a href=\"editparams.cgi?section=advanced#cookiedomain_desc\"><var>cookiedomain</var>")  . ' parameter</a>, you should set <var>attachment_base</var> to use a'  . ' domain that would <em>not</em> be matched by'  . ' <var>cookiedomain</var>.</p>'  . '<p>For added security, you can insert <var>%bugid%</var> into the URL,'  . (" which will be replaced with the ID of the current " . $stash->get(['terms', 0, 'bug', 0]) . " that")  . ' the attachment is on, when you access an attachment. This will limit'  . ' attachments to accessing only other attachments on the same'  . (" " . $stash->get(['terms', 0, 'bug', 0]) . ". Remember, though, that all those possible domain names ")  . ' (such as <kbd>1234.your.domain.com</kbd>) must point to this same'  . ' Bugzilla instance.', 'allow_attachment_deletion' => 'If this option is on, administrators will be able to delete '  . 'the content of attachments.', 'maxattachmentsize' => 'The maximum size (in kilobytes) of attachments to be stored '  . 'in the database. If a file larger than this size is attached '  . ("to " . $stash->get(['terms', 0, 'abug', 0]) . ", Bugzilla will look at the ")  . ('' . "<a href=\"#maxlocalattachment\"><var>maxlocalattachment</var> parameter</a> ")  . 'to determine if the file can be stored locally on the web server. '  . 'If the file size exceeds both limits, then the attachment is rejected. '  . ("Settings both parameters to 0 will prevent attaching files to " . $stash->get(['terms', 0, 'bugs', 0]) . "."), 'maxlocalattachment' => 'The maximum size (in megabytes) of attachments to be stored '  . 'locally on the web server. If set to a value lower than the '  . ('' . "<a href=\"#maxattachmentsize\"><var>maxattachmentsize</var> parameter</a>, ")  . 'attachments will never be kept on the local filesystem.'  });
$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
