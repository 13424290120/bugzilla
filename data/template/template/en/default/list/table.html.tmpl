use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1483774492',
        'name' => 'list/table.html.tmpl',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n\n";
#line 15 "template/en/default/list/table.html.tmpl"
if (! $stash->get(['bugs', 0, 'size', 0])) {
$context->throw('return', '', \$output);
}

$output .=  "\n\n";
$output .=  "\n";
#line 26 "template/en/default/list/table.html.tmpl"
$stash->set(['field_descs', 0, 'short_short_desc', 0], $stash->get(['field_descs', 0, 'short_desc', 0]));
#line 27 "template/en/default/list/table.html.tmpl"
$stash->set(['field_descs', 0, 'assigned_to_realname', 0], $stash->get(['field_descs', 0, 'assigned_to', 0]));
#line 28 "template/en/default/list/table.html.tmpl"
$stash->set(['field_descs', 0, 'reporter_realname', 0], $stash->get(['field_descs', 0, 'reporter', 0]));
#line 29 "template/en/default/list/table.html.tmpl"
$stash->set(['field_descs', 0, 'qa_contact_realname', 0], $stash->get(['field_descs', 0, 'qa_contact', 0]));
$output .=  "\n\n";
#line 32 "template/en/default/list/table.html.tmpl"
$stash->set('abbrev', { 'bug_severity' => { 'maxlength' => 3, 'title' => 'Sev'  }, 'priority' => { 'maxlength' => 7, 'title' => 'Pri'  }, 'rep_platform' => { 'maxlength' => 3, 'title' => 'HW'  }, 'bug_status' => { 'maxlength' => 4  }, 'assigned_to' => { 'maxlength' => 30, 'ellipsis' => '...'  }, 'assigned_to_realname' => { 'maxlength' => 20, 'ellipsis' => '...'  }, 'reporter' => { 'maxlength' => 30, 'ellipsis' => '...'  }, 'reporter_realname' => { 'maxlength' => 20, 'ellipsis' => '...'  }, 'qa_contact' => { 'maxlength' => 30, 'ellipsis' => '...', 'title' => 'QAContact'  }, 'qa_contact_realname' => { 'maxlength' => 20, 'ellipsis' => '...', 'title' => 'QAContact'  }, 'resolution' => { 'maxlength' => 4  }, 'short_desc' => { 'maxlength' => 0, 'wrap' => 1  }, 'short_short_desc' => { 'maxlength' => 60, 'ellipsis' => '...', 'wrap' => 1  }, 'status_whiteboard' => { 'maxlength' => 0, 'title' => 'Whiteboard', 'wrap' => 1  }, 'keywords' => { 'maxlength' => 0, 'wrap' => 1  }, 'tags' => { 'maxlength' => 0, 'title' => 'Tags', 'wrap' => 1  }, 'dependson' => { 'maxlength' => 0, 'wrap' => 1  }, 'blocked' => { 'maxlength' => 0, 'wrap' => 1  }, 'flagtypes.name' => { 'maxlength' => 0, 'wrap' => 1  }, 'component' => { 'maxlength' => 8, 'title' => 'Comp'  }, 'product' => { 'maxlength' => 8  }, 'version' => { 'maxlength' => 5, 'title' => 'Vers'  }, 'op_sys' => { 'maxlength' => 12  }, 'bug_file_loc' => { 'maxlength' => 30  }, 'target_milestone' => { 'maxlength' => 0, 'title' => 'TargetM'  }, 'longdescs.count' => { 'maxlength' => 0, 'title' => '# Comments'  }, 'percentage_complete' => { 'maxlength' => 0, 'format_value' => '%d %%'  }  });
$output .=  "\n";
#line 64 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('bug/time.html.tmpl');
$output .=  "\n";
#line 66 "template/en/default/list/table.html.tmpl"
$output .=  $stash->get(['Hook', 0, 'process', [ 'before_table' ]]);
$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";
#line 118 "template/en/default/list/table.html.tmpl"

# CAPTURE
$stash->set('tableheader', do {
    my $output = '';
$output .=  "\n  <table class=\"bz_buglist\">\n    <tr class=\"bz_buglist_header bz_first_buglist_header\">";
#line 77 "template/en/default/list/table.html.tmpl"
if ($stash->get('dotweak')) {
$output .=  "\n      <th>&nbsp;</th>";
}

$output .=  "\n      <th colspan=\"";
#line 78 "template/en/default/list/table.html.tmpl"
$output .=  $stash->get('splitheader') ? 2 : 1;
$output .=  "\" class=\"first-child\">\n        <a href=\"buglist.cgi?";
#line 80 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('urlquerypart');
    
    &$_tt_filter($output);
};

$output .=  "&amp;order=";
#line 81 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('new_order', { 'id' => 'bug_id' });

$output .=  "&amp;query_based_on=";
#line 83 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('uri')
              || $context->throw($context->error);

$output .=  $stash->get('defaultsavename') || $stash->get('searchname');
    
    &$_tt_filter($output);
};

$output .=  "\">ID";
#line 84 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('order_arrow', { 'id' => 'bug_id' });
$output .=  "</a>\n      </th>\n";
#line 115 "template/en/default/list/table.html.tmpl"
if ($stash->get('splitheader')) {
$output .=  "\n";
#line 94 "template/en/default/list/table.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('displaycolumns');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'id'} = $_tt_value;
#line 91 "template/en/default/list/table.html.tmpl"
if (!($stash->get(['loop', 0, 'count', 0]) % 2 eq 0)) {
($_tt_value, $_tt_error) = $_tt_list->get_next();
next FOR1;

}

#line 92 "template/en/default/list/table.html.tmpl"
$stash->set('column', $stash->get(['columns', 0, $stash->get('id'), 0]));
#line 93 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('columnheader');;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n        </tr><tr class=\"bz_buglist_header\">";
#line 99 "template/en/default/list/table.html.tmpl"
if ($stash->get('dotweak')) {
$output .=  "\n          <th>&nbsp;</th>";
}

$output .=  "\n        <th>&nbsp;</th>\n";
#line 106 "template/en/default/list/table.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('displaycolumns');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'id'} = $_tt_value;
#line 103 "template/en/default/list/table.html.tmpl"
if ($stash->get(['loop', 0, 'count', 0]) % 2 eq 0) {
($_tt_value, $_tt_error) = $_tt_list->get_next();
next FOR1;

}

#line 104 "template/en/default/list/table.html.tmpl"
$stash->set('column', $stash->get(['columns', 0, $stash->get('id'), 0]));
#line 105 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('columnheader');;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n";
}
else {
$output .=  "\n";
#line 113 "template/en/default/list/table.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('displaycolumns');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'id'} = $_tt_value;
#line 111 "template/en/default/list/table.html.tmpl"
$stash->set('column', $stash->get(['columns', 0, $stash->get('id'), 0]));
#line 112 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('columnheader');;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n";
}

$output .=  "\n\n    </tr>";
    $output;
});

$output .=  "\n";

$output .=  "\n";

$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";
#line 159 "template/en/default/list/table.html.tmpl"
$output .=  $stash->get('tableheader');
$output .=  "\n";
#line 229 "template/en/default/list/table.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('bugs');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'bug'} = $_tt_value;
#line 162 "template/en/default/list/table.html.tmpl"
$stash->set('count', $stash->get(['loop', 0, 'count', 0]));
$output .=  "\n\n  <tr id=\"b";
#line 164 "template/en/default/list/table.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "\" class=\"bz_bugitem\n             bz_";
#line 165 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('css_class_quote')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_severity', 0]);
    
    &$_tt_filter($output);
};

$output .=  "             bz_";
#line 166 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('css_class_quote')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'priority', 0]);
    
    &$_tt_filter($output);
};

$output .=  "             bz_";
#line 167 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('css_class_quote')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_status', 0]);
    
    &$_tt_filter($output);
};

$output .=  "             ";
#line 1 "template/en/default/list/table.html.tmpl"
if ($stash->get(['bug', 0, 'resolution', 0])) {

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('css_class_quote')
              || $context->throw($context->error);

$output .=  ("bz_" . $stash->get(['bug', 0, 'resolution', 0]));
    
    &$_tt_filter($output);
};

}

$output .=  "             ";
#line 169 "template/en/default/list/table.html.tmpl"
if ($stash->get(['bug', 0, 'secure_mode', 0])) {
$output .=  'bz_secure';
}

$output .=  "             ";
#line 1 "template/en/default/list/table.html.tmpl"
if ($stash->get(['bug', 0, 'secure_mode', 0])) {

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('css_class_quote')
              || $context->throw($context->error);

$output .=  ("bz_secure_mode_" . $stash->get(['bug', 0, 'secure_mode', 0]));
    
    &$_tt_filter($output);
};

}

$output .=  "             ";
#line 171 "template/en/default/list/table.html.tmpl"
$output .=  $stash->get('count') % 2 eq 1 ? 'bz_row_odd' : 'bz_row_even';
$output .=  "             \">\n";
#line 178 "template/en/default/list/table.html.tmpl"
if ($stash->get('dotweak')) {
$output .=  "\n    <td class=\"bz_checkbox_column\">\n      <input type=\"checkbox\" name=\"id_";
#line 176 "template/en/default/list/table.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "\">\n    </td>";
}

$output .=  "\n    <td class=\"first-child bz_id_column\">\n      <a href=\"show_bug.cgi?id=";
#line 180 "template/en/default/list/table.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "\">";
#line 180 "template/en/default/list/table.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "</a>\n      <span class=\"bz_default_hidden\">";
#line 181 "template/en/default/list/table.html.tmpl"
if ($stash->get(['bug', 0, 'secure_mode', 0])) {
$output .=  '[SEC]';
}

$output .=  "</span>\n    </td>\n";
#line 226 "template/en/default/list/table.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('displaycolumns');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR2:   while (! $_tt_error) {
            $stash->{'column'} = $_tt_value;
#line 185 "template/en/default/list/table.html.tmpl"
$stash->set('col_abbrev', $stash->get(['abbrev', 0, $stash->get('column'), 0]));
$output .=  "\n    <td class=\"bz_";
#line 186 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('css_class_quote')
              || $context->throw($context->error);

$output .=  $stash->get('column');
    
    &$_tt_filter($output);
};

$output .=  "_column";
#line 187 "template/en/default/list/table.html.tmpl"
if (!($stash->get(['col_abbrev', 0, 'wrap', 0]) || $stash->get(['bug_fields', 0, $stash->get('column'), 0, 'type', 0]) eq '1' || $stash->get(['bug_fields', 0, $stash->get('column'), 0, 'type', 0]) eq '4')) {
$output .=  ' nowrap';
}

$output .=  "\">";
#line 192 "template/en/default/list/table.html.tmpl"
if ($stash->get(['col_abbrev', 0, 'maxlength', 0])) {
$output .=  "\n        <span title=\"";
#line 191 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['display_value', [ $stash->get('column'), $stash->get(['bug', 0, $stash->get('column'), 0]) ]]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
}

#line 221 "template/en/default/list/table.html.tmpl"
if ($stash->get(['col_abbrev', 0, 'format_value', 0])) {
#line 194 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('format', [ $stash->get(['col_abbrev', 0, 'format_value', 0]) ])
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, $stash->get('column'), 0]);
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

}
elsif ($stash->get('column') eq 'actual_time' || $stash->get('column') eq 'remaining_time' || $stash->get('column') eq 'estimated_time') {
#line 198 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['bug', 0, $stash->get('column'), 0]) });
$output .=  " \n      ";
}
elsif ($stash->get(['column', 0, 'search', [ '_realname$' ]]) && $stash->get(['bug', 0, $stash->get('column'), 0]) eq '') {
#line 201 "template/en/default/list/table.html.tmpl"
$stash->set('login_column', $stash->get(['column', 0, 'remove', [ '_realname$' ]]));
#line 202 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, $stash->get('login_column'), 0, 'truncate', [ $stash->get(['col_abbrev', 0, 'maxlength', 0]), $stash->get(['col_abbrev', 0, 'ellipsis', 0]) ]]);
    
    &$_tt_filter($output);
};

}
elsif ($stash->get('column') eq 'short_desc' || $stash->get('column') eq 'short_short_desc') {
$output .=  "\n        <a href=\"show_bug.cgi?id=";
#line 205 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 206 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, $stash->get('column'), 0, 'truncate', [ $stash->get(['col_abbrev', 0, 'maxlength', 0]), $stash->get(['col_abbrev', 0, 'ellipsis', 0]) ]]);
    
    &$_tt_filter($output);
};

$output .=  "        </a>";
}
elsif ($stash->get(['bug_fields', 0, $stash->get('column'), 0, 'type', 0]) eq '6') {
$output .=  "\n        <a href=\"show_bug.cgi?id=";
#line 209 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, $stash->get('column'), 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 210 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, $stash->get('column'), 0, 'truncate', [ $stash->get(['col_abbrev', 0, 'maxlength', 0]), $stash->get(['col_abbrev', 0, 'ellipsis', 0]) ]]);
    
    &$_tt_filter($output);
};

$output .=  "        </a>";
}
elsif ($stash->get(['bug_fields', 0, $stash->get('column'), 0, 'type', 0]) eq '4') {
#line 213 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, $stash->get('column'), 0, 'truncate', [ 256, '...' ]]);
    
    &$_tt_filter($output);
};

}
elsif ($stash->get('column') eq 'bug_file_loc' && $stash->get(['is_safe_url', [ $stash->get(['bug', 0, 'bug_file_loc', 0]) ]])) {
$output .=  "\n        <a href=\"";
#line 215 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\" target=\"_blank\"\n           rel=\"noreferrer\" title=\"";
#line 216 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 217 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['display_value', [ $stash->get('column'), $stash->get(['bug', 0, $stash->get('column'), 0]) ], 'truncate', [ $stash->get(['col_abbrev', 0, 'maxlength', 0]), $stash->get(['col_abbrev', 0, 'ellipsis', 0]) ]]);
    
    &$_tt_filter($output);
};

$output .=  "        </a>";
}
else {
#line 220 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['display_value', [ $stash->get('column'), $stash->get(['bug', 0, $stash->get('column'), 0]) ], 'truncate', [ $stash->get(['col_abbrev', 0, 'maxlength', 0]), $stash->get(['col_abbrev', 0, 'ellipsis', 0]) ]]);
    
    &$_tt_filter($output);
};

}

#line 224 "template/en/default/list/table.html.tmpl"
if ($stash->get(['col_abbrev', 0, 'maxlength', 0])) {
$output .=  "\n        </span>";
}

$output .=  "\n    </td>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n  </tr>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n";
#line 233 "template/en/default/list/table.html.tmpl"
if ($stash->get(['time_info', 0, 'time_present', 0])) {
#line 232 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('time_summary_line');
}

$output .=  "\n\n</table>\n";

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {
        'new_order' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 133 "template/en/default/list/table.html.tmpl"
$stash->set('desc', '');
#line 136 "template/en/default/list/table.html.tmpl"
if ($stash->set('om', $stash->get(['order', 0, 'match', [ ("\\b" . $stash->get('id') . "( DESC)?") ]]))) {
#line 135 "template/en/default/list/table.html.tmpl"

# CAPTURE
$stash->set('desc', do {
    my $output = '';
if (! $stash->get(['om', 0, 0, 0])) {
$output .=  ' DESC';
}

    $output;
});

}

#line 137 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('uri')
              || $context->throw($context->error);

$output .=  $stash->get('id')  . $stash->get('desc');
    
    &$_tt_filter($output);
};

#line 140 "template/en/default/list/table.html.tmpl"
if ($stash->get('id') ne 'bug_id' && $stash->get('order')) {
#line 1 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('uri')
              || $context->throw($context->error);

$output .=  ','  . $stash->get(['order', 0, 'remove', [ ("\\b" . $stash->get('id') . "( DESC)?(,\\s*|\$)") ]]);
    
    &$_tt_filter($output);
};

}

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'time_summary_line' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <tr class=\"bz_time_summary_line\">";
#line 239 "template/en/default/list/table.html.tmpl"
$stash->set('columns_to_span', 1);
$output .=  "  ";
#line 242 "template/en/default/list/table.html.tmpl"
if ($stash->get('dotweak')) {
#line 241 "template/en/default/list/table.html.tmpl"
$stash->set('columns_to_span', $stash->get('columns_to_span') + 1);
}

#line 265 "template/en/default/list/table.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('displaycolumns');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'column'} = $_tt_value;
#line 264 "template/en/default/list/table.html.tmpl"
if ($stash->get('column') eq 'actual_time' || $stash->get('column') eq 'remaining_time' || $stash->get('column') eq 'estimated_time' || $stash->get('column') eq 'percentage_complete') {
#line 252 "template/en/default/list/table.html.tmpl"
if ($stash->get('columns_to_span') > 0) {
$output .=  "\n          <td class=\"bz_total bz_total_label\" colspan=\"";
#line 250 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('columns_to_span');
    
    &$_tt_filter($output);
};

$output .=  "\"><b>Totals</b></td>";
#line 251 "template/en/default/list/table.html.tmpl"
$stash->set('columns_to_span', 0);
}

#line 259 "template/en/default/list/table.html.tmpl"
if ($stash->get('column') eq 'percentage_complete') {
$output .=  "\n          <td class=\"bz_total\">";
#line 254 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('format', [ $stash->get(['abbrev', 0, $stash->get('column'), 0, 'format_value', 0]) ])
              || $context->throw($context->error);

$output .=  $stash->get(['time_info', 0, 'percentage_complete', 0]);
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

$output .=  "</td>";
}
else {
$output .=  "\n          <td class=\"bz_total\">";
#line 258 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['time_info', 0, $stash->get('column'), 0]) });
$output .=  "</td>";
}

}
elsif ($stash->get('columns_to_span') eq 0) {
$output .=  " ";
$output .=  "\n        <td class=\"bz_total\">&nbsp;</td>";
}
else {
$output .=  " ";
#line 263 "template/en/default/list/table.html.tmpl"
$stash->set('columns_to_span', $stash->get('columns_to_span') + 1);
}
;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n  </tr>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'order_arrow' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 152 "template/en/default/list/table.html.tmpl"
if ($stash->get(['order', 0, 'search', [ ("^" . $stash->get('id') . " DESC") ]])) {
$output .=  "\n    <span class=\"bz_sort_order_primary\">&#x25BC;</span>";
}
elsif ($stash->get(['order', 0, 'search', [ ("^" . $stash->get('id') . "(,\\s*|\$)") ]])) {
$output .=  "\n    <span class=\"bz_sort_order_primary\">&#x25B2;</span>";
}
elsif ($stash->get(['order', 0, 'search', [ ("\\b" . $stash->get('id') . " DESC") ]])) {
$output .=  "\n    <span class=\"bz_sort_order_secondary\">&#x25BC;</span>";
}
elsif ($stash->get(['order', 0, 'search', [ ("\\b" . $stash->get('id') . "(,\\s*|\$)") ]])) {
$output .=  "\n    <span class=\"bz_sort_order_secondary\">&#x25B2;</span>";
}

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'columnheader' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <th colspan=\"";
#line 121 "template/en/default/list/table.html.tmpl"
$output .=  $stash->get('splitheader') ? 2 : 1;
$output .=  "\">\n    <a href=\"buglist.cgi?";
#line 122 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('urlquerypart');
    
    &$_tt_filter($output);
};

$output .=  "&amp;order=";
#line 123 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('new_order');

$output .=  "&amp;query_based_on=";
#line 125 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('uri')
              || $context->throw($context->error);

$output .=  $stash->get('defaultsavename') || $stash->get('searchname');
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 126 "template/en/default/list/table.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['abbrev', 0, $stash->get('id'), 0, 'title', 0]) || $stash->get(['field_descs', 0, $stash->get('id'), 0]) || $stash->get(['column', 0, 'title', 0]);
    
    &$_tt_filter($output);
};

#line 127 "template/en/default/list/table.html.tmpl"
$output .=  $context->process('order_arrow');
$output .=  "</a>\n  </th>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    },
});
