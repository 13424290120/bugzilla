use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1483774492',
        'name' => 'list/quips.html.tmpl',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n";
$output .=  "\n";
#line 17 "template/en/default/list/quips.html.tmpl"
$output .=  $context->process('global/header.html.tmpl', { 'title' => 'Bugzilla Quip System', 'header' => 'Add your own clever headline', 'style_urls' => [ 'skins/standard/buglist.css' ] });
$output .=  "\n\n<p>\n  Bugzilla will pick a random quip for the headline on each";
#line 25 "template/en/default/list/quips.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " list.\n</p>\n";
#line 49 "template/en/default/list/quips.html.tmpl"
if ($stash->get(['Param', [ 'quip_list_entry_control' ]]) ne 'closed') {
$output .=  "\n  <p>\n    You can extend the quip list. Type in something clever or funny or boring\n    (but not obscene or offensive, please) and bonk on the button.";
#line 34 "template/en/default/list/quips.html.tmpl"
if ($stash->get(['Param', [ 'quip_list_entry_control' ]]) eq 'moderated' && ! $stash->get(['user', 0, 'in_group', [ 'bz_quip_moderators' ]])) {
$output .=  "\n      Note that your quip has to be approved before it is used.";
}

$output .=  "\n  </p>\n\n  <form method=\"post\" action=\"quips.cgi\">\n    <input type=\"hidden\" name=\"action\" value=\"add\">\n    <input type=\"hidden\" name=\"token\"\n           value=\"";
#line 40 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['issue_hash_token', [ [ 'create-quips' ] ]]);
    
    &$_tt_filter($output);
};

$output .=  "\">\n    <input size=\"80\" name=\"quip\" maxlength=\"512\" required>\n    <p>\n      <input type=\"submit\" id=\"add\" value=\"Add This Quip\">\n    </p>\n  </form>";
}
else {
$output .=  "\n  <p>No new entries may be submitted at this time.\n  </p>";
}

$output .=  "\n";
#line 143 "template/en/default/list/quips.html.tmpl"
if ($stash->get('show_quips')) {
#line 133 "template/en/default/list/quips.html.tmpl"
if (! $stash->get(['user', 0, 'in_group', [ 'bz_quip_moderators' ]])) {
$output .=  "\n    <h2>\n      Existing quips:\n    </h2>\n    <ul>";
#line 60 "template/en/default/list/quips.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('quipids');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'quipid'} = $_tt_value;
#line 58 "template/en/default/list/quips.html.tmpl"
if (! $stash->get(['quips', 0, $stash->get('quipid'), 0, 'approved', 0])) {
($_tt_value, $_tt_error) = $_tt_list->get_next();
next FOR1;

}

$output .=  "\n        <li>";
#line 59 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['quips', 0, $stash->get('quipid'), 0, 'quip', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</li>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n    </ul>";
}
else {
$output .=  "\n    <h2>Edit existing quips:</h2>\n    <p>\n      <strong>Note:</strong> Only approved quips will be shown.\n      If the parameter 'quip_list_entry_control' is set to <q>open</q>, \n      entered quips are automatically approved.\n    </p>\n    <form name=\"editform\" method=\"post\" action=\"quips.cgi\">\n      <input type=\"hidden\" name=\"action\" value=\"approve\">\n      <input type=\"hidden\" name=\"token\"\n             value=\"";
#line 72 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['issue_hash_token', [ [ 'approve-quips' ] ]]);
    
    &$_tt_filter($output);
};

$output .=  "\">\n      <table id=\"quips\">\n        <thead>\n        <tr class=\"column_header\">\n          <th>Quip</th>\n          <th>Author</th>\n          <th>Action</th>\n          <th>Approved</th>\n        </tr>\n        </thead>\n\n        <tbody>";
#line 107 "template/en/default/list/quips.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('quipids');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'quipid'} = $_tt_value;
$output .=  "\n          <tr>\n            <td>";
#line 86 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['quips', 0, $stash->get('quipid'), 0, 'quip', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</td>\n            <td>";
#line 88 "template/en/default/list/quips.html.tmpl"
$stash->set('userid', $stash->get(['quips', 0, $stash->get('quipid'), 0, 'userid', 0]));
#line 89 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['users', 0, $stash->get('userid'), 0]);
    
    &$_tt_filter($output);
};

#line 90 "template/en/default/list/quips.html.tmpl"
if (! $stash->get(['users', 0, $stash->get('userid'), 0])) {
$output .=  'Unknown';
}

$output .=  "\n            </td>\n            <td>\n              <a href=\"quips.cgi?action=delete&amp;quipid=";
#line 93 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('uri')
              || $context->throw($context->error);

$output .=  $stash->get('quipid');
    
    &$_tt_filter($output);
};

$output .=  "&amp;token=";
#line 94 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('uri')
              || $context->throw($context->error);

$output .=  $stash->get(['issue_hash_token', [ [ 'quips', $stash->get('quipid') ] ]]);
    
    &$_tt_filter($output);
};

$output .=  "\">\n                Delete\n              </a>\n            </td>\n            <td class=\"center\">\n              <input type=\"hidden\" name=\"defined_quipid_";
#line 99 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('quipid');
    
    &$_tt_filter($output);
};

$output .=  "\"\n                     id=\"defined_quipid_";
#line 100 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('quipid');
    
    &$_tt_filter($output);
};

$output .=  "\"\n                     value=\"1\">\n              <input type=\"checkbox\" name=\"quipid_";
#line 102 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('quipid');
    
    &$_tt_filter($output);
};

$output .=  "\"\n                     id=\"quipid_";
#line 103 "template/en/default/list/quips.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('quipid');
    
    &$_tt_filter($output);
};

$output .=  "\"";
#line 104 "template/en/default/list/quips.html.tmpl"
if ($stash->get(['quips', 0, $stash->get('quipid'), 0, 'approved', 0])) {
$output .=  ' checked="checked"';
}

$output .=  ">\n            </td>\n          </tr>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n        </tbody>\n      </table>\n\n      <input type=\"button\" id=\"uncheck_all\" value=\"Uncheck All\"\n             class=\"bz_default_hidden\" onclick=\"SetCheckboxes(false);\">\n      <input type=\"button\" id=\"check_all\" value=\"Check All\"\n             class=\"bz_default_hidden\" onclick=\"SetCheckboxes(true);\">\n      <input type=\"submit\" id=\"update\" value=\"Save Changes\">\n\n      <script type=\"text/javascript\">\n        <!--\n        var numelements = document.forms.editform.elements.length;\n        function SetCheckboxes(value) {\n          var item;\n          for (var i=0 ; i<numelements ; i++) {\n            item = document.forms.editform.elements[i];\n            item.checked = value;\n          }\n        }\n        YAHOO.util.Dom.removeClass(\"check_all\", \"bz_default_hidden\");\n        YAHOO.util.Dom.removeClass(\"uncheck_all\", \"bz_default_hidden\");\n        //-->\n      </script>\n    </form>\n    <br>";
}

}
else {
$output .=  "\n  <p>\n    Those who like their wisdom in large doses can\n    <a href=\"quips.cgi?action=show\">view";
#line 140 "template/en/default/list/quips.html.tmpl"
if ($stash->get(['user', 0, 'in_group', [ 'bz_quip_moderators' ]])) {
$output .=  "\n      and edit";
}

$output .=  "\n    the whole quip list</a>.\n  </p>";
}

$output .=  "\n";
#line 145 "template/en/default/list/quips.html.tmpl"
$output .=  $context->process('global/footer.html.tmpl');
$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
