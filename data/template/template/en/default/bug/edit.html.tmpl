use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'bug/edit.html.tmpl',
        'modtime' => '1488917292',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n<script type=\"text/javascript\">\n\$(document).ready(function(){\n\n    \$(\"#bug_status\").change(function(){\n      var prStatus = \$(this).children('option:selected').val();\n      var faManager = \"melissa.li\@premiumsoundsolutions.com\"; \n      var secretary = \"emily.liu\@premiumsoundsolutions.com\";\n      var generalManager = \"philip.lim\@premiumsoundsolutions.com\";\n      var mailto = \$(\"#reporter\").find(\"a\").attr(\"href\");\n      var reporter = mailto.split(\":\",2);\n      //\$(\"#bz_assignee_edit_container\").css(\"background-color\",\"#ffff00\");\n      //\$(\"#bz_assignee_edit_container\").after(\"<div>\"+spantext+\"</div>\");\n      //alert(\$(\"#bz_assignee_edit_action\").text());\n      \$(\"#edit_assignee\").trigger(\"click\");\n      switch(prStatus){\n          case \"HOD Approved\":\n              \$('input[name=\"assigned_to\"]').val(faManager);\n              break;\n          case \"FA HOD Approved\":\n              \$('input[name=\"assigned_to\"]').val(secretary);\n              break;\n          case \"Secretary Reviewed\":\n              \$('input[name=\"assigned_to\"]').val(generalManager);\n              break;\n          case \"GM Approved\":\n              \$('input[name=\"assigned_to\"]').val(reporter[1]);\n              break;\n          default:\n              \$(\"#dialog\").dialog(); \n              \$('input[name=\"assigned_to\"]').focus();\n              //\$(\"#bz_assignee_edit_container\").after(\"<span class='box'>Attention: Don't forget to assign to next approver</span>\");\n              //\$(\".box\").fadeOut(3600);\n      }\n      //\$('input[name=\"assigned_to\"]').val(reporter[1]);\n      //var spantext = \$(\"#bz_assignee_edit_container\").children('span').html();\n      //alert (spantext);\n    });\n})\n</script>\n";
#line 49 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('bug/time.html.tmpl');
$output .=  "\n";
#line 81 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['Param', [ 'comment_taggers_group' ]])) {
#line 66 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'can_tag_comments', 0])) {
$output .=  "\n    <div id=\"bz_ctag_div\" class=\"bz_default_hidden\">\n      <a href=\"javascript:void(0)\" onclick=\"YAHOO.bugzilla.commentTagging.hideInput()\">x</a>\n      <div>\n        <input id=\"bz_ctag_add\" size=\"10\" placeholder=\"add tag\"\n              maxlength=\"";
#line 57 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  '24';
    
    &$_tt_filter($output);
};

$output .=  "\">\n        <span id=\"bz_ctag_autocomp\"></span>\n      </div>\n      &nbsp;\n    </div>\n    <div id=\"bz_ctag_error\" class=\"bz_default_hidden\">\n      <a href=\"javascript:void(0)\" onclick=\"YAHOO.bugzilla.commentTagging.hideError()\">x</a>\n      <span id=\"bz_ctag_error_msg\"></span>\n    </div>";
}

#line 80 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
$output .=  "\n    <script type=\"text/javascript\">\n      YAHOO.bugzilla.commentTagging.init(";
#line 69 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['user', 0, 'can_tag_comments', 0]) ? 'true' : 'false';
$output .=  ");\n      YAHOO.bugzilla.commentTagging.min_len = ";
#line 70 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  '3';
    
    &$_tt_filter($output);
};

$output .=  ";\n      YAHOO.bugzilla.commentTagging.max_len = ";
#line 71 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  '24';
    
    &$_tt_filter($output);
};

$output .=  ";\n      YAHOO.bugzilla.commentTagging.label = 'Comment Tags:';\n      YAHOO.bugzilla.commentTagging.min_len_error =\n        'Comment tags must be at least";
#line 75 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  ' '  . '3';
    
    &$_tt_filter($output);
};

$output .=  " characters.';\n      YAHOO.bugzilla.commentTagging.max_len_error =\n        'Comment tags cannot be longer than";
#line 78 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  ' '  . '24';
    
    &$_tt_filter($output);
};

$output .=  " characters.';\n    </script>";
}

}

$output .=  "\n\n<script type=\"text/javascript\">\n<!--";
#line 87 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'is_timetracker', 0])) {
$output .=  "\n  var bz_remaining_time = ";
#line 86 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'remaining_time', 0]);
$output .=  ";";
}

$output .=  "\n";
#line 98 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
$output .=  "\n  /* Index all classifications so we can keep track of the classification\n   * for the selected product, which could control field visibility.\n   */\n  var all_classifications = new Array(";
#line 93 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'choices', 0, 'product', 0, 'size', 0]);
$output .=  ");";
#line 97 "template/en/default/bug/edit.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['bug', 0, 'choices', 0, 'product', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'product'} = $_tt_value;
$output .=  "\n      all_classifications['";
#line 95 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['product', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "'] = '";
#line 96 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['product', 0, 'classification', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "';";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

}

$output .=  "\n//-->\n</script>\n\n<form name=\"changeform\" id=\"changeform\" method=\"post\" action=\"process_bug.cgi\">\n\n  <input type=\"hidden\" name=\"delta_ts\" value=\"";
#line 104 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'delta_ts', 0]);
$output .=  "\">\n  <input type=\"hidden\" name=\"id\" value=\"";
#line 105 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "\">\n  <input type=\"hidden\" name=\"token\" value=\"";
#line 106 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['issue_hash_token', [ [ $stash->get(['bug', 0, 'id', 0]), $stash->get(['bug', 0, 'delta_ts', 0]) ] ]]);
    
    &$_tt_filter($output);
};

$output .=  "\">\n";
#line 108 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_title');
$output .=  "\n  <table class=\"edit_form\">\n    <tr>\n      ";
$output .=  "\n      <td id=\"bz_show_bug_column_1\" class=\"bz_show_bug_column\">     \n        <table>\n          ";
#line 115 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_status');
$output .=  "\n";
#line 117 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_spacer');
$output .=  "\n";
#line 119 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_aliases');
$output .=  "\n";
#line 121 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_spacer');
$output .=  "\n";
#line 123 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_details1');
$output .=  "\n          ";
#line 125 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_spacer');
$output .=  "\n          \n          ";
#line 128 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_details2');
$output .=  "\n          \n          ";
#line 131 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_spacer');
$output .=  "\n          ";
#line 133 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_url_keyword_whiteboard');
$output .=  "\n          ";
#line 135 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_spacer');
$output .=  "\n\n          ";
#line 138 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_duplicates');
$output .=  "\n";
#line 140 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_dependson_blocks');
$output .=  "\n          \n        </table>\n      </td>\n      <td>\n        <div class=\"bz_column_spacer\">&nbsp;</div>\n      </td>\n      ";
$output .=  "\n      <td id=\"bz_show_bug_column_2\" class=\"bz_show_bug_column\">\n        <table>\n        ";
#line 151 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_dates');
$output .=  "\n";
#line 153 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_cclist');
$output .=  "\n";
#line 155 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_bug_ignored');
$output .=  "\n";
#line 157 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_spacer');
$output .=  "\n";
#line 159 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_see_also');
$output .=  " \n";
#line 161 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_customfields');
$output .=  "\n";
#line 163 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_spacer');
$output .=  "\n";
#line 165 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['Hook', 0, 'process', [ 'after_custom_fields' ]]);
$output .=  "\n";
#line 167 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_flags');
$output .=  "\n\n        </table>\n      </td>\n    </tr>\n    <tr>\n      <td colspan=\"3\">\n          <hr id=\"bz_top_half_spacer\">\n      </td>\n    </tr>\n  </table>\n\n  <table id=\"bz_big_form_parts\">\n  <tr>\n  <td>";
#line 184 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'is_timetracker', 0])) {
#line 183 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_timetracking');
}

$output .=  "\n\n    ";
$output .=  "\n";
#line 188 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('attachment/list.html.tmpl', { 'attachments' => $stash->get(['bug', 0, 'attachments', 0]), 'bugid' => $stash->get(['bug', 0, 'bug_id', 0]), 'num_attachment_flag_types' => $stash->get(['bug', 0, 'num_attachment_flag_types', 0]), 'show_attachment_flags' => $stash->get(['bug', 0, 'show_attachment_flags', 0]) });
$output .=  "\n";
#line 197 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'settings', 0, 'comment_box_position', 0, 'value', 0]) eq 'before_comments') {
#line 196 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('comment_box');
}

$output .=  "\n  </td>\n  <td>";
#line 200 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_restrict_visibility');
$output .=  "\n  </td>\n  </tr></table>\n\n  ";
$output .=  "\n  <div id=\"comments\">";
#line 206 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('bug/comments.html.tmpl', { 'comments' => $stash->get(['bug', 0, 'comments', 0]), 'mode' => $stash->get(['user', 0, 'id', 0]) ? 'edit' : 'show' });
$output .=  "\n  </div>\n<div id=\"dialog\" title=\"Attention:\" style=\"display:none;\">\n  <p>Hey, please don't forget to assign this request to next approver, otherwise, this workflow will stop here.</p>\n</div>\n";
#line 218 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'settings', 0, 'comment_box_position', 0, 'value', 0]) eq 'after_comments') {
$output .=  "\n    <hr>";
#line 217 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('comment_box');
}

$output .=  "        \n\n</form>\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n\n\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";

$output .=  "\n\n";
$output .=  "\n";
$output .=  "\n";
$output .=  "\n";


$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {
        'comment_box' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <div id=\"add_comment\" class=\"bz_section_additional_comments\">";
#line 1235 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
$output .=  "\n      <label for=\"comment\" accesskey=\"c\"><b>Additional \n        <u>C</u>omments</b></label>:\n";
#line 1180 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'is_insider', 0]) && $stash->get(['bug', 0, 'check_can_change_field', [ 'longdesc', 0, 1 ]])) {
$output .=  "\n        <input type=\"checkbox\" name=\"comment_is_private\" value=\"1\"\n               id=\"newcommentprivacy\"\n               onClick=\"updateCommentTagControl(this, 'comment')\">\n        <label for=\"newcommentprivacy\">\n          Make comment private (visible only to members of the\n          <strong>";
#line 1178 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['Param', [ 'insidergroup' ]]);
    
    &$_tt_filter($output);
};

$output .=  "</strong> group)\n        </label>";
}

$output .=  "\n\n      <!-- This table keeps the submit button aligned with the box. -->\n      <table><tr><td>";
#line 1198 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'check_can_change_field', [ 'longdesc', 0, 1 ]])) {
#line 1185 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/comment.html.tmpl', { 'minrows' => 10, 'maxrows' => 25, 'cols' => '80' });
#line 1194 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'is_insider', 0])) {
$output .=  "\n            <script>\n               updateCommentTagControl(document.getElementById('newcommentprivacy'), 'comment');\n            </script>";
}

#line 1195 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['Hook', 0, 'process', [ 'after_comment_textarea', 'bug/edit.html.tmpl' ]]);
}
else {
$output .=  "\n          You are not allowed to make an additional comment on this ";
#line 1197 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ".";
}

$output .=  "\n        <br>";
#line 1200 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('commit_button', { 'id' => '' });
$output .=  "\n";
#line 1202 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['Hook', 0, 'process', [ 'after_comment_commit_button', 'bug/edit.html.tmpl' ]]);
#line 1218 "template/en/default/bug/edit.html.tmpl"
if (! $stash->get(['bug', 0, 'resolution', 0])) {
$output .=  "\n\n        <table id=\"bug_status_bottom\" class=\"status\">\n          ";
$output .=  "\n          <tr>\n            <th class=\"field_label\">\n              <a href=\"page.cgi?id=fields.html#bug_status\">Status</a>:\n            </th>\n            <td>";
#line 1212 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('bug/knob.html.tmpl');
$output .=  "\n            </td>\n          </tr>";
#line 1215 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('section_people');
$output .=  "\n        </table>\n      </td></tr></table>";
}

$output .=  "\n\n    ";
}
else {
$output .=  "\n      <table>\n        <tr>\n          <td>\n            <fieldset>\n              <legend>Note</legend>\n              You need to\n              <a href=\"show_bug.cgi?id=";
#line 1229 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "&amp;GoAheadAndLogIn=1\">log in</a>\n              before you can comment on or make changes to this ";
#line 1230 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ".\n            </fieldset>\n          </td>\n        </tr> \n      </table>";
}

$output .=  "\n  </div>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_duplicates' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 613 "template/en/default/bug/edit.html.tmpl"
if (!($stash->get(['bug', 0, 'duplicates', 0, 'size', 0]))) {
$context->throw('return', '', \$output);
}

$output .=  "\n  <tr>\n    <th class=\"field_label\">\n      <label>Duplicates (";
#line 616 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'duplicates', 0, 'size', 0]);
$output .=  ")</label>:\n    </th>\n    <td class=\"field_value\">\n      <span id=\"duplicates\">";
#line 622 "template/en/default/bug/edit.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['bug', 0, 'duplicates', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'dupe'} = $_tt_value;
#line 621 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/link.html.tmpl', { 'bug' => $stash->get('dupe'), 'link_text' => $stash->get(['dupe', 0, 'id', 0]), 'use_alias' => 1 });
#line 621 "template/en/default/bug/edit.html.tmpl"
$output .=  ' ';;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n      </span>\n      (<a href=\"buglist.cgi?bug_id=";
#line 624 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'duplicate_ids', 0, 'join', [ ',' ]]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
$output .=  "view as ";
#line 625 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " list</a>)\n    </td>\n  </tr>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_status' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <tr>\n    <th class=\"field_label\">\n      <a href=\"page.cgi?id=fields.html#bug_status\">Status</a>:\n    </th>\n    <td id=\"bz_field_status\">\n      <span id=\"static_bug_status\">";
#line 349 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['display_value', [ 'bug_status', $stash->get(['bug', 0, 'bug_status', 0]) ]]);
    
    &$_tt_filter($output);
};

#line 357 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'resolution', 0])) {
$output .=  "\n          ";
#line 351 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['display_value', [ 'resolution', $stash->get(['bug', 0, 'resolution', 0]) ]]);
    
    &$_tt_filter($output);
};

$output .=  "\n<!--";
#line 355 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'dup_id', 0])) {
$output .=  "\n            of ";
#line 1 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('none')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('bug_link', [ $stash->get(['bug', 0, 'dup_id', 0]) ])
              || $context->throw($context->error);

$output .=  ($stash->get(['terms', 0, 'bug', 0]) . " " . $stash->get(['bug', 0, 'dup_id', 0]));
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

}

$output .=  "\n-->    ";
}

#line 361 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'user', 0, 'canedit', 0]) || $stash->get(['bug', 0, 'user', 0, 'isreporter', 0])) {
$output .=  "\n          (<a href=\"#add_comment\" \n              onclick=\"window.setTimeout(function() { document.getElementById('bug_status').focus(); }, 10)\">edit</a>)";
}

$output .=  "\n      </span>\n    </td>\n  </tr>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_spacer' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <tr>\n    <td colspan=\"2\" class=\"bz_section_spacer\"></td>\n  </tr>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_cclist' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n    <tr>\n      <th class=\"field_label\">\n        <label ";
#line 790 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
$output .=  "for=\"newcc\"";
}

$output .=  " accesskey=\"a\">\n          CC List:\n        </label>\n      </th>\n      <td>";
#line 805 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
#line 804 "template/en/default/bug/edit.html.tmpl"
if (! $stash->get(['bug', 0, 'cc', 0, 'contains', [ $stash->get(['user', 0, 'login', 0]) ]])) {
$output .=  "\n            <input type=\"checkbox\" id=\"addselfcc\" name=\"addselfcc\"";
#line 798 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'settings', 0, 'state_addselfcc', 0, 'value', 0]) eq 'always' || (! $stash->get(['bug', 0, 'user', 0, 'has_any_role', 0]) && $stash->get(['user', 0, 'settings', 0, 'state_addselfcc', 0, 'value', 0]) eq 'cc_unless_role')) {
$output .=  ('' . " checked=\"checked\"");
}

$output .=  ">\n            <label for=\"addselfcc\">Add me to CC list</label>\n            <br> ";
}

}

#line 806 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'cc', 0, 'size', 0]);
    
    &$_tt_filter($output);
};

$output .=  " ";
#line 811 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'cc', 0, 'size', 0]) eq 1) {
$output .=  "\n          user";
}
else {
$output .=  "\n          users";
}

#line 816 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
#line 815 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'cc', 0, 'contains', [ $stash->get(['user', 0, 'email', 0]) ]])) {
$output .=  "\n            including you";
}

}

#line 821 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0]) || $stash->get(['bug', 0, 'cc', 0, 'size', 0])) {
$output .=  "\n          <span id=\"cc_edit_area_showhide_container\" class=\"bz_default_hidden\">\n            (<a href=\"#\" id=\"cc_edit_area_showhide\">";
#line 819 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
$output .=  "edit";
}
else {
$output .=  "show";
}

$output .=  "</a>)\n          </span>";
}

$output .=  "\n        <div id=\"cc_edit_area\">\n          <br>";
#line 836 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
$output .=  "\n            <div>\n              <div><label for=\"cc\"><b>Add</b></label></div>";
#line 827 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('global/userselect.html.tmpl', { 'id' => 'newcc', 'name' => 'newcc', 'value' => '', 'size' => 30, 'classes' => [ 'bz_userfield' ], 'multiple' => 5 });
$output .=  "\n            </div>";
}

#line 859 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'cc', 0, 'size', 0])) {
$output .=  "\n            <select id=\"cc\" multiple=\"multiple\" size=\"5\" ";
#line 838 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'user', 0, 'canedit', 0])) {
$output .=  'name="cc"';
}

$output .=  ">";
#line 842 "template/en/default/bug/edit.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['bug', 0, 'cc', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'c'} = $_tt_value;
$output .=  "\n                <option value=\"";
#line 840 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('email')
              || $context->throw($context->error);

$output .=  $stash->get('c');
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 841 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('email')
              || $context->throw($context->error);

$output .=  $stash->get('c');
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

$output .=  "</option>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n            </select>";
#line 846 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0]) && ! $stash->get(['bug', 0, 'user', 0, 'canedit', 0])) {
$output .=  "\n              <input type=\"hidden\" name=\"cc\" value=\"";
#line 845 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('email')
              || $context->throw($context->error);

$output .=  $stash->get(['user', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

$output .=  "\">";
}

#line 858 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0]) && ($stash->get(['bug', 0, 'user', 0, 'canedit', 0]) || $stash->get(['bug', 0, 'cc', 0, 'contains', [ $stash->get(['user', 0, 'login', 0]) ]]))) {
$output .=  "\n              <br>\n              <input type=\"checkbox\" id=\"removecc\" name=\"removecc\">\n              <label for=\"removecc\">";
#line 855 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'user', 0, 'canedit', 0])) {
$output .=  "\n                  Remove selected CCs";
}
else {
$output .=  "\n                  Remove me from the CC list";
}

$output .=  "\n              </label>\n              <br>";
}

}

$output .=  "\n        </div>";
#line 869 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0]) || $stash->get(['bug', 0, 'cc', 0, 'size', 0])) {
$output .=  "\n          <script type=\"text/javascript\">\n            hideEditableField( 'cc_edit_area_showhide_container', \n                               'cc_edit_area', \n                               'cc_edit_area_showhide', \n                               '', \n                               '');  \n          </script>";
}

$output .=  "\n      </td>\n    </tr>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_people' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n    <tr>";
#line 422 "template/en/default/bug/edit.html.tmpl"
$stash->set('can_edit_assigned_to', $stash->get(['bug', 0, 'check_can_change_field', [ 'assigned_to', 0, 1 ]]));
#line 423 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'assigned_to', 0]), 'editable' => $stash->get('can_edit_assigned_to') });
$output .=  "\n      <td>";
#line 468 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('can_edit_assigned_to')) {
$output .=  "\n          <div id=\"bz_assignee_edit_container\" class=\"bz_default_hidden\">\n            <span>";
#line 431 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['bug', 0, 'assigned_to', 0]) });
$output .=  "\n              (<a href=\"#\" id=\"bz_assignee_edit_action\"><span id=\"edit_assignee\">edit<span></a>)";
#line 435 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'assigned_to', 0, 'id', 0]) eq $stash->get(['user', 0, 'id', 0])) {
$output .=  "\n                  <marquee scrollAmount=4 width=120 behavior=alternate><font color=\"red\">&lt;&lt;Next Approver</font></marquee>";
}

$output .=  "\n            </span>\n          </div>\n          <div id=\"bz_assignee_input\">";
#line 439 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('global/userselect.html.tmpl', { 'id' => 'assigned_to', 'name' => 'assigned_to', 'value' => $stash->get(['bug', 0, 'assigned_to', 0, 'login', 0]), 'classes' => [ 'bz_userfield' ], 'size' => 30 });
$output .=  "\n            <br>\n           ";
$output .=  "\n          </div>\n          <script type=\"text/javascript\">\n           hideEditableField('bz_assignee_edit_container', \n                             'bz_assignee_input', \n                             'bz_assignee_edit_action', \n                             'assigned_to', \n                             '";
#line 457 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'assigned_to', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

$output .=  "' );\n           hideEditableField('bz_assignee_edit_container',\n                             'bz_assignee_input',\n                             'bz_assignee_take_action',\n                             'assigned_to',\n                             '";
#line 462 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'assigned_to', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

$output .=  "',\n                             '";
#line 463 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['user', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

$output .=  "' );\n           initDefaultCheckbox('assignee');                  \n          </script>";
}
else {
#line 467 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['bug', 0, 'assigned_to', 0]) });
}

$output .=  "\n      </td>\n    </tr>\n";
#line 524 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['Param', [ 'useqacontact' ]])) {
$output .=  "\n    <tr>";
#line 474 "template/en/default/bug/edit.html.tmpl"
$stash->set('can_edit_qa_contact', $stash->get(['bug', 0, 'check_can_change_field', [ 'qa_contact', 0, 1 ]]));
#line 475 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'qa_contact', 0]), 'editable' => $stash->get('can_edit_qa_contact'), 'accesskey' => 'q' });
$output .=  "\n      <td>";
#line 521 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('can_edit_qa_contact')) {
$output .=  "\n          <div id=\"bz_qa_contact_edit_container\" class=\"bz_default_hidden\">\n            <span>";
#line 484 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['bug', 0, 'qa_contact', 0]) });
$output .=  "\n              (<a href=\"#\" id=\"bz_qa_contact_edit_action\">edit</a>)";
#line 489 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'qa_contact', 0, 'id', 0]) ne $stash->get(['user', 0, 'id', 0])) {
$output .=  "\n                (<a title=\"Change QA contact to yourself\" \n                    href=\"#\" id=\"bz_qa_contact_take_action\">take</a>)";
}

$output .=  "\n            </span>\n          </div>\n          <div id=\"bz_qa_contact_input\">";
#line 493 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('global/userselect.html.tmpl', { 'id' => 'qa_contact', 'name' => 'qa_contact', 'value' => $stash->get(['bug', 0, 'qa_contact', 0, 'login', 0]), 'size' => 30, 'classes' => [ 'bz_userfield' ], 'emptyok' => 1 });
$output .=  "\n            <br>\n            <input type=\"checkbox\" id=\"set_default_qa_contact\" name=\"set_default_qa_contact\" value=\"1\">\n            <label for=\"set_default_qa_contact\" id=\"set_default_qa_contact_label\">Reset QA Contact to default</label>\n          </div>\n          <script type=\"text/javascript\">\n            hideEditableField('bz_qa_contact_edit_container', \n                              'bz_qa_contact_input', \n                              'bz_qa_contact_edit_action', \n                              'qa_contact', \n                              '";
#line 510 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'qa_contact', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

$output .=  "');\n            hideEditableField('bz_qa_contact_edit_container', \n                              'bz_qa_contact_input', \n                              'bz_qa_contact_take_action', \n                              'qa_contact', \n                              '";
#line 515 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'qa_contact', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

$output .=  "',\n                              '";
#line 516 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['user', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

$output .=  "');\n            initDefaultCheckbox('qa_contact');\n          </script>";
}
else {
#line 520 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['bug', 0, 'qa_contact', 0]) });
}

$output .=  "\n      </td>\n    </tr>";
}

$output .=  "\n    <script type=\"text/javascript\">\n      assignToDefaultOnChange(['product', 'component'],\n        '";
#line 527 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'component_obj', 0, 'default_assignee', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

$output .=  "',\n        '";
#line 528 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'component_obj', 0, 'default_qa_contact', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

$output .=  "');\n    </script>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_dates' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <tr>\n    <th class=\"field_label\">\n      Reported:\n    </th>\n    <td>";
#line 768 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('time', [ '%Y-%m-%d %H:%M %Z' ])
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'creation_ts', 0]);
    
    &$_tt_filter($output);
};

$output .=  " by <span id=\"reporter\">";
#line 768 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('global/user.html.tmpl', { 'who' => $stash->get(['bug', 0, 'reporter', 0]) });
$output .=  "</span>\n    </td>\n  </tr>\n  \n  <tr>\n    <th class=\"field_label\">\n      Modified:\n    </th>\n    <td>";
#line 777 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('time', [ '%Y-%m-%d %H:%M %Z' ])
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'delta_ts', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\n      (<a href=\"show_activity.cgi?id=";
#line 778 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "\">";
$output .=  "History</a>)\n    </td>\n  \n  </tr>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_title' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  ";
$output .=  "\n  <div class=\"bz_short_desc_container edit_form\">";
#line 229 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('commit_button', { 'id' => '_top' });
$output .=  "\n     <a href=\"show_bug.cgi?id=";
#line 230 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "\">";

$output .=  "<b>";
#line 231 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  "&nbsp;";
#line 231 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</b>";

$output .=  "</a> <span id=\"summary_container\" class=\"bz_default_hidden\">";
#line 235 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'alias', 0, 'size', 0]) > 0) {
$output .=  "\n        (<span id=\"alias_nonedit_display\">";
#line 234 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'alias', 0, 'join', [ ', ' ]]);
    
    &$_tt_filter($output);
};

$output .=  "</span>)";
}

$output .=  "\n      - <span id=\"short_desc_nonedit_display\">";
#line 236 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('quoteUrls', [ $stash->get('bug') ])
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'short_desc', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</span>";
#line 237 "template/en/default/bug/edit.html.tmpl"
$stash->set('can_edit_short_desc', $stash->get(['bug', 0, 'check_can_change_field', [ 'short_desc', 0, 1 ]]));
#line 240 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('can_edit_short_desc')) {
$output .=  "\n        <small>(<a href=\"#\" id=\"summary_edit_action\">edit</a>)</small>";
}

$output .=  "\n     </span>\n\n    <div id=\"summary_input\">";
#line 244 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'short_desc', 0]), 'editable' => $stash->get('can_edit_short_desc'), 'accesskey' => 's', 'tag_name' => 'span' });
#line 250 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('input', { 'inputname' => 'short_desc', 'size' => '80', 'maxlength' => 255, 'spellcheck' => 'true', 'no_td' => 1 });
$output .=  "\n\n\n    </div>\n  </div>\n  <script type=\"text/javascript\">\n    hideEditableField('summary_container',\n                      'summary_input',\n                      'summary_edit_action',\n                      'short_desc',\n                      '";
#line 261 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'short_desc', 0]);
    
    &$_tt_filter($output);
};

$output .=  "' );\n  </script>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_bug_ignored' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 894 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
$output .=  "\n    <tr>\n      <th class=\"field_label\">\n        <label for=\"bug_ignored\" title=\"Ignore all email for this ";
#line 881 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  "\">\n          Ignore ";
#line 882 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " Mail:\n        </label>\n      </th>\n      <td>\n        <input type=\"hidden\" name=\"defined_bug_ignored\" value=\"1\">\n        <span title=\"You will still receive emails for flag requests directed at you.\">\n          <input type=\"checkbox\" name=\"bug_ignored\" id=\"bug_ignored\" value=\"1\"";
#line 889 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'is_bug_ignored', [ $stash->get(['bug', 0, 'id', 0]) ]])) {
$output .=  ' checked="checked"';
}

$output .=  ">\n          (never email me about this ";
#line 890 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ")\n        </span>\n      </td>\n    </tr>";
}

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_restrict_visibility' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 666 "template/en/default/bug/edit.html.tmpl"
if (!($stash->get(['bug', 0, 'groups', 0, 'size', 0]))) {
$context->throw('return', '', \$output);
}

$output .=  "\n\n  <div class=\"bz_group_visibility_section\">";
#line 669 "template/en/default/bug/edit.html.tmpl"
$stash->set('inallgroups', 1);
#line 670 "template/en/default/bug/edit.html.tmpl"
$stash->set('inagroup', 0);
#line 671 "template/en/default/bug/edit.html.tmpl"
$stash->set('emitted_description', 0);
$output .=  "\n";
#line 703 "template/en/default/bug/edit.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['bug', 0, 'groups', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'group'} = $_tt_value;
#line 674 "template/en/default/bug/edit.html.tmpl"
if (! $stash->get(['group', 0, 'ingroup', 0])) {
$stash->set('inallgroups', 0);
}

#line 675 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['group', 0, 'ison', 0])) {
$stash->set('inagroup', 1);
}

$output .=  "\n";
#line 677 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['group', 0, 'mandatory', 0])) {
($_tt_value, $_tt_error) = $_tt_list->get_next();
next FOR1;

}

$output .=  "\n";
#line 689 "template/en/default/bug/edit.html.tmpl"
if (! $stash->get('emitted_description')) {
#line 680 "template/en/default/bug/edit.html.tmpl"
$stash->set('emitted_description', 1);
$output .=  "\n          <div id=\"bz_restrict_group_visibility_help\">\n            <b>Only users in\n              ";
#line 683 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['Param', [ 'or_groups' ]])) {
$output .=  "at least one";
}
else {
$output .=  "all";
}

$output .=  "\n              of the selected groups can view this ";
#line 684 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ":</b>\n             <p class=\"instructions\">\n               Unchecking all boxes makes this a more public ";
#line 686 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ".\n             </p>\n          </div>";
}

$output .=  "\n";
#line 694 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['group', 0, 'ingroup', 0])) {
$output .=  "\n        <input type=\"hidden\" name=\"defined_groups\" \n               value=\"";
#line 693 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['group', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
}

$output .=  "\n\n      <input type=\"checkbox\" value=\"";
#line 696 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['group', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"\n             name=\"groups\" id=\"group_";
#line 697 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['group', 0, 'bit', 0]);
$output .=  "\"";
#line 698 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['group', 0, 'ison', 0])) {
$output .=  ' checked="checked"';
}

#line 699 "template/en/default/bug/edit.html.tmpl"
if (! $stash->get(['group', 0, 'ingroup', 0])) {
$output .=  ' disabled="disabled"';
}

$output .=  ">\n      <label for=\"group_";
#line 700 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['group', 0, 'bit', 0]);
$output .=  "\">";
#line 701 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html_light')
              || $context->throw($context->error);

$output .=  $stash->get(['group', 0, 'description', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</label>\n      <br>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n";
#line 710 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('emitted_description')) {
#line 709 "template/en/default/bug/edit.html.tmpl"
if (! $stash->get('inallgroups')) {
$output .=  "\n        <p class=\"instructions\">Only members of a group can change the \n          visibility of ";
#line 708 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'abug', 0]);
$output .=  " for that group.</p>";
}

}

$output .=  "\n";
#line 754 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('inagroup')) {
$output .=  "\n      <div id=\"bz_enable_role_visibility_help\">\n        <b>Users in the roles selected below can always view \n          this ";
#line 715 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ":</b>\n      </div>\n      <div id=\"bz_enable_role_visibility\">\n        <div>";
#line 719 "template/en/default/bug/edit.html.tmpl"
$stash->set('user_can_edit_accessible', $stash->get(['bug', 0, 'check_can_change_field', [ 'reporter_accessible', 0, 1 ]]));
#line 724 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('user_can_edit_accessible')) {
$output .=  "\n            <input type=\"hidden\" name=\"defined_reporter_accessible\" value=\"1\">";
}

$output .=  "\n          <input type=\"checkbox\" value=\"1\"\n                 name=\"reporter_accessible\" id=\"reporter_accessible\"";
#line 727 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'reporter_accessible', 0])) {
$output .=  ' checked';
}

#line 728 "template/en/default/bug/edit.html.tmpl"
if (!($stash->get('user_can_edit_accessible'))) {
$output .=  ('' . " disabled=\"disabled\"");
}

$output .=  ">\n          <label for=\"reporter_accessible\">Reporter</label>\n        </div>\n        <div>";
#line 732 "template/en/default/bug/edit.html.tmpl"
$stash->set('user_can_edit_accessible', $stash->get(['bug', 0, 'check_can_change_field', [ 'cclist_accessible', 0, 1 ]]));
#line 737 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('user_can_edit_accessible')) {
$output .=  "\n            <input type=\"hidden\" name=\"defined_cclist_accessible\" value=\"1\">";
}

$output .=  "\n          <input type=\"checkbox\" value=\"1\"\n                 name=\"cclist_accessible\" id=\"cclist_accessible\"";
#line 740 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'cclist_accessible', 0])) {
$output .=  ' checked';
}

#line 741 "template/en/default/bug/edit.html.tmpl"
if (!($stash->get('user_can_edit_accessible'))) {
$output .=  ('' . " disabled=\"disabled\"");
}

$output .=  ">\n          <label for=\"cclist_accessible\">CC List</label>\n        </div>\n        <p class=\"instructions\">\n          The assignee";
#line 748 "template/en/default/bug/edit.html.tmpl"
if (($stash->get(['Param', [ 'useqacontact' ]]))) {
$output .=  "\n             and QA contact";
}

$output .=  "\n          can always see ";
#line 749 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'abug', 0]);
$output .=  ", and this section does not\n          take effect unless the ";
#line 750 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " is restricted to at\n          least one group.\n        </p>\n      </div>";
}

$output .=  "\n  </div> ";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'input' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 1269 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('no_td') ne 1) {
$output .=  "\n  <td";
#line 1 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('colspan')) {
$output .=  (" colspan=\"" . $stash->get('colspan') . "\"");
}

$output .=  ">";
}

#line 1270 "template/en/default/bug/edit.html.tmpl"
$stash->set('val', $stash->get('value') ? $stash->get('value') : $stash->get(['bug', 0, $stash->get('inputname'), 0]));
#line 1284 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'check_can_change_field', [ $stash->get('inputname'), 0, 1 ]])) {
$output .=  "\n       <input id=\"";
#line 1272 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get('inputname');
$output .=  "\" name=\"";
#line 1272 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get('inputname');
$output .=  "\" class=\"text_input\"\n              value=\"";
#line 1273 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('val');
    
    &$_tt_filter($output);
};

$output .=  "\"";
#line 1 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('size')) {
$output .=  (" size=\"" . $stash->get('size') . "\"");
}

#line 1 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('maxlength')) {
$output .=  (" maxlength=\"" . $stash->get('maxlength') . "\"");
}

#line 1 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('spellcheck')) {
$output .=  (" spellcheck=\"" . $stash->get('spellcheck') . "\"");
}

$output .=  ">";
}
else {
#line 1283 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('size') && $stash->get(['val', 0, 'length', 0]) > $stash->get('size')) {
$output .=  "\n        <span title=\"";
#line 1278 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('val');
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 1279 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('truncate', [ $stash->get('size') ])
              || $context->throw($context->error);

$output .=  $stash->get('val');
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

$output .=  "\n        </span>";
}
else {
#line 1282 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('val');
    
    &$_tt_filter($output);
};

}

}

#line 1287 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('no_td') ne 1) {
$output .=  "  \n  </td>";
}

#line 1288 "template/en/default/bug/edit.html.tmpl"
$stash->set('no_td', 0);
#line 1289 "template/en/default/bug/edit.html.tmpl"
$stash->set('maxlength', 0);
#line 1290 "template/en/default/bug/edit.html.tmpl"
$stash->set('colspan', 0);
#line 1291 "template/en/default/bug/edit.html.tmpl"
$stash->set('size', 0);
#line 1292 "template/en/default/bug/edit.html.tmpl"
$stash->set('value', $stash->get('undef'));
#line 1293 "template/en/default/bug/edit.html.tmpl"
$stash->set('spellcheck', $stash->get('undef'));
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'dependencies' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n";
#line 1056 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl');
$output .=  "\n\n  <td>\n    <span id=\"";
#line 1059 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['field', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "_input_area\">";
#line 1064 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'check_can_change_field', [ $stash->get(['field', 0, 'name', 0]), 0, 1 ]])) {
$output .=  "\n        <input name=\"";
#line 1061 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['field', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\" \n               id=\"";
#line 1062 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['field', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\" class=\"text_input\"\n               value=\"";
#line 1063 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, $stash->get(['field', 0, 'name', 0]), 0, 'join', [ ', ' ]]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
}

$output .=  "\n    </span>\n";
#line 1069 "template/en/default/bug/edit.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('deps');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'dep_bug'} = $_tt_value;
#line 1068 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/link.html.tmpl', { 'bug' => $stash->get('dep_bug'), 'link_text' => $stash->get(['dep_bug', 0, 'id', 0]), 'use_alias' => 1 });
#line 1068 "template/en/default/bug/edit.html.tmpl"
$output .=  ' ';;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

#line 1082 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'check_can_change_field', [ $stash->get(['field', 0, 'name', 0]), 0, 1 ]])) {
$output .=  "\n      <span id=\"";
#line 1071 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['field', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "_edit_container\" \n            class=\"edit_me bz_default_hidden\">\n        (<a href=\"#\" id=\"";
#line 1073 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['field', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "_edit_action\">edit</a>)\n      </span>\n      <script type=\"text/javascript\">\n        hideEditableField('";
#line 1076 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['field', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "_edit_container', \n                          '";
#line 1077 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['field', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "_input_area', \n                          '";
#line 1078 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['field', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "_edit_action', \n                          '";
#line 1079 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['field', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "', \n                          '";
#line 1080 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, $stash->get(['field', 0, 'name', 0]), 0, 'join', [ ', ' ]]);
    
    &$_tt_filter($output);
};

$output .=  "');\n      </script>";
}

$output .=  "\n  </td>\n  ";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_details2' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n ";
$output .=  "\n ";
$output .=  "\n ";
$output .=  "\n    <tr>\n      <th class=\"field_label\">";
#line 378 "template/en/default/bug/edit.html.tmpl"
$stash->set('can_edit_priority', $stash->get(['bug', 0, 'check_can_change_field', [ 'priority', 0, 1 ]]));
$output .=  "\n        <label ";
#line 379 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('can_edit_priority')) {
$output .=  "for=\"priority\"";
}

$output .=  " accesskey=\"i\">\n          <a href=\"page.cgi?id=fields.html#importance\"><u>I</u>mportance</a></label>:\n      </th>\n      <td>";
#line 383 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['bug_fields', 0, 'priority', 0]), 'no_tds' => 1, 'value' => $stash->get(['bug', 0, 'priority', 0]), 'editable' => $stash->get('can_edit_priority') });
$output .=  "\n       ";
#line 387 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['bug_fields', 0, 'bug_severity', 0]), 'no_tds' => 1, 'value' => $stash->get(['bug', 0, 'bug_severity', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'bug_severity', 0, 1 ]]) });
#line 391 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['Hook', 0, 'process', [ 'after_importance', 'bug/edit.html.tmpl' ]]);
$output .=  "\n      </td>\n    </tr>\n";
#line 403 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['Param', [ 'usetargetmilestone' ]]) && $stash->get(['bug', 0, 'target_milestone', 0])) {
$output .=  "\n      <tr>";
#line 397 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'target_milestone', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'target_milestone', 0, 1 ]]) });
#line 401 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('select', { 'selname' => 'target_milestone' });
$output .=  "\n      </tr>";
}

$output .=  "\n";
#line 412 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['Param', [ 'timetrackinggroup' ]]) && $stash->get(['bug', 0, 'deadline', 0])) {
$output .=  "\n      <tr>\n        <th class=\"field_label\">\n          <a href=\"page.cgi?id=fields.html#deadline\">Deadline</a>:\n        </th>\n        <td>";
#line 410 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'deadline', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</td>\n      </tr>";
}

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'commit_button' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 1301 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
$output .=  "\n    <div class=\"knob-buttons\">\n      <input type=\"submit\" value=\"Save Changes\" \n             id=\"commit";
#line 1299 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('css_class_quote')
              || $context->throw($context->error);

$output .=  $stash->get('id');
    
    &$_tt_filter($output);
};

$output .=  "\">\n    </div>";
}

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_dependson_blocks' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <tr>";
#line 636 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('dependencies', { 'field' => $stash->get(['bug_fields', 0, 'dependson', 0]), 'deps' => $stash->get(['bug', 0, 'depends_on_obj', 0]) });
$output .=  "\n  </tr>\n  \n  <tr>";
#line 641 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('dependencies', { 'field' => $stash->get(['bug_fields', 0, 'blocked', 0]), 'deps' => $stash->get(['bug', 0, 'blocks_obj', 0]) });
$output .=  "\n  </tr>\n";
#line 657 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'dependson', 0, 'size', 0]) || $stash->get(['bug', 0, 'blocked', 0, 'size', 0])) {
$output .=  "\n    <tr>\n      <th>&nbsp;</th>\n\n      <td id=\"show_dependency_tree_or_graph\">\n        Show dependency <a href=\"showdependencytree.cgi?id=";
#line 650 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "&amp;hide_resolved=1\">tree</a>\n";
#line 654 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['Param', [ 'webdotbase' ]])) {
$output .=  "\n          /&nbsp;<a href=\"showdependencygraph.cgi?id=";
#line 653 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "\">graph</a>";
}

$output .=  "\n      </td>\n    </tr>";
}

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_aliases' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <tr>";
#line 914 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'alias', 0]) });
$output .=  "\n    <td>";
#line 920 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'alias', 0, 'size', 0])) {
#line 917 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'alias', 0, 'join', [ ', ' ]]);
    
    &$_tt_filter($output);
};

}
else {
$output .=  "\n        None";
}

#line 951 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'check_can_change_field', [ 'alias', 0, 1 ]])) {
$output .=  "\n        <span id=\"alias_edit_area_showhide_container\" class=\"bz_default_hidden\">\n          (<a href=\"#\" id=\"alias_edit_area_showhide\">edit</a>)\n        </span>\n        <br>\n        <div id=\"alias_edit_area\">\n          <div>\n            <label for=\"newalias\" class=\"field_label\">Add</label>\n            <br>\n            <input name=\"newalias\" id=\"newalias\" size=\"20\">\n          </div>";
#line 942 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'alias', 0, 'size', 0])) {
$output .=  "\n            <select id=\"alias\" name=\"alias\" multiple=\"multiple\" size=\"5\">";
#line 936 "template/en/default/bug/edit.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['bug', 0, 'alias', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'a'} = $_tt_value;
$output .=  "\n                <option value=\"";
#line 935 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('a');
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 935 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('a');
    
    &$_tt_filter($output);
};

$output .=  "</option>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n            </select>\n            <br>\n\n            <input type=\"checkbox\" id=\"removealias\" name=\"removealias\">\n            <label for=\"removealias\">Remove selected aliases</label>";
}

$output .=  "\n        </div>\n        <script type=\"text/javascript\">\n          hideEditableField( 'alias_edit_area_showhide_container',\n                             'alias_edit_area',\n                             'alias_edit_area_showhide',\n                             '',\n                             '');\n        </script>";
}

$output .=  "\n    </td>\n  </tr>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_see_also' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 909 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['Param', [ 'use_see_also' ]]) || $stash->get(['bug', 0, 'see_also', 0, 'size', 0])) {
$output .=  "\n    <tr>";
#line 903 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'see_also', 0]), 'value' => $stash->get(['bug', 0, 'see_also', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'see_also', 0, 1 ]]) });
$output .=  "\n    </tr>";
}

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_customfields' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n";
#line 1020 "template/en/default/bug/edit.html.tmpl"
# USE
$stash->set('Bugzilla',
            $context->plugin('Bugzilla'));
#line 1034 "template/en/default/bug/edit.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['Bugzilla', 0, 'active_custom_fields', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'field'} = $_tt_value;
$output .=  "\n    <tr>\n      ";
#line 1025 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('bug/field.html.tmpl', { 'value' => $stash->get(['bug', 0, $stash->get(['field', 0, 'name', 0]), 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ $stash->get(['field', 0, 'name', 0]), 0, 1 ]]) });
$output .=  "\n    </tr>";
#line 1033 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('extra_field_item')) {
$output .=  "\n      <tr>\n        <th class=\"field_label\">";
#line 1030 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('none')
              || $context->throw($context->error);

$output .=  $stash->get(['extra_field_item', 0, 'header', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</th>\n        <td>";
#line 1031 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('none')
              || $context->throw($context->error);

$output .=  $stash->get(['extra_field_item', 0, 'data', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</td>\n      </tr>";
}
;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'select' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <td>";
#line 1258 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'check_can_change_field', [ $stash->get('selname'), 0, 1 ]]) && $stash->get(['bug', 0, 'choices', 0, $stash->get('selname'), 0, 'size', 0]) > 1) {
$output .=  "\n      <input type=\"hidden\" id=\"";
#line 1247 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get('selname');
$output .=  "_dirty\">\n      <select id=\"";
#line 1248 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get('selname');
$output .=  "\" name=\"";
#line 1248 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get('selname');
$output .=  "\">";
#line 1254 "template/en/default/bug/edit.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['bug', 0, 'choices', 0, $stash->get('selname'), 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'x'} = $_tt_value;
$output .=  "\n          <option value=\"";
#line 1250 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['x', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"";
#line 1251 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['x', 0, 'name', 0]) eq $stash->get(['bug', 0, $stash->get('selname'), 0])) {
$output .=  ' selected';
}

$output .=  ">";
#line 1252 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['x', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\n          </option>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n      </select>";
}
else {
#line 1257 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, $stash->get('selname'), 0]);
    
    &$_tt_filter($output);
};

}

$output .=  "\n  </td>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_timetracking' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <table class=\"bz_time_tracking_table\">\n    <tr>";
#line 1094 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'estimated_time', 0]), 'editable' => 1 });
$output .=  "\n      <th>\n        Current Est.:\n      </th>";
#line 1100 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'work_time', 0]), 'editable' => 1 });
#line 1103 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'remaining_time', 0]), 'editable' => 1 });
#line 1106 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'percentage_complete', 0]) });
$output .=  "\n      <th>\n        Gain:\n      </th>";
#line 1112 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'deadline', 0]), 'editable' => 1 });
$output .=  "\n    </tr>\n    <tr>\n      <td>\n        <input name=\"estimated_time\" id=\"estimated_time\"\n               value=\"";
#line 1119 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['bug', 0, 'estimated_time', 0]) });
$output .=  "\"\n               size=\"6\" maxlength=\"6\">\n      </td>\n      <td>";
#line 1124 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('formattimeunit', { 'time_unit' => ($stash->get(['bug', 0, 'actual_time', 0]) + $stash->get(['bug', 0, 'remaining_time', 0])) });
$output .=  "\n      </td>\n      <td>";
#line 1128 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['bug', 0, 'actual_time', 0]) });
$output .=  " +\n        <input name=\"work_time\" id=\"work_time\"\n               value=\"0\" size=\"3\" maxlength=\"6\"\n               onchange=\"adjustRemainingTime();\">\n      </td>\n      <td>\n        <input name=\"remaining_time\" id=\"remaining_time\"\n               value=\"";
#line 1135 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['bug', 0, 'remaining_time', 0]) });
$output .=  "\"\n               size=\"6\" maxlength=\"6\" onchange=\"updateRemainingTime();\">\n      </td>\n      <td>";
#line 1140 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('calculatepercentage', { 'act' => $stash->get(['bug', 0, 'actual_time', 0]), 'rem' => $stash->get(['bug', 0, 'remaining_time', 0]) });
$output .=  "\n      </td>\n      <td>";
#line 1144 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('formattimeunit', { 'time_unit' => $stash->get(['bug', 0, 'estimated_time', 0]) - ($stash->get(['bug', 0, 'actual_time', 0]) + $stash->get(['bug', 0, 'remaining_time', 0])) });
$output .=  "\n      </td>\n       <td>";
#line 1147 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'deadline', 0]), 'value' => $stash->get(['bug', 0, 'deadline', 0]), 'no_tds' => 1, 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'deadline', 0, 1 ]]) });
$output .=  "\n      </td>        \n    </tr>\n    <tr>\n      <td colspan=\"7\" class=\"bz_summarize_time\">\n        <a href=\"summarize_time.cgi?id=";
#line 1154 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "&amp;do_depends=1\">\n        Summarize time (including time for ";
#line 1155 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  "\n        blocking this ";
#line 1156 "template/en/default/bug/edit.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ")</a>\n      </td>\n    </tr>\n  </table> ";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_details1' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n    ";
$output .=  "\n    ";
$output .=  "\n    ";
$output .=  "\n    <tr>";
#line 275 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['bug_fields', 0, 'product', 0]), 'value' => $stash->get(['bug', 0, 'product', 0]), 'override_legal_values' => $stash->get(['bug', 0, 'choices', 0, 'product', 0]), 'desc_url' => 'describecomponents.cgi', 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'product', 0, 1 ]]) });
$output .=  "\n    </tr>\n\n    ";
$output .=  "\n    <tr class=\"bz_default_hidden\">";
#line 289 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['bug_fields', 0, 'classification', 0]), 'override_legal_values' => $stash->get(['bug', 0, 'choices', 0, 'classification', 0]), 'value' => $stash->get(['bug', 0, 'classification', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'product', 0, 1 ]]) });
$output .=  "\n    </tr>\n    ";
$output .=  "    \n    ";
$output .=  "\n    ";
$output .=  "\n    <tr>";
#line 1 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['bug_fields', 0, 'component', 0]), 'value' => $stash->get(['bug', 0, 'component', 0]), 'override_legal_values' => $stash->get(['bug', 0, 'choices', 0, 'component', 0]), 'desc_url' => ("describecomponents.cgi?product=" . $stash->get(['bug', 0, 'product', 0])), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'component', 0, 1 ]]) });
$output .=  "\n    </tr>\n    <tr>";
#line 307 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'version', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'version', 0, 1 ]]) });
$output .=  "\n";
#line 311 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('select', { 'selname' => 'version' });
$output .=  "\n    </tr>\n    ";
$output .=  "    \n    ";
$output .=  "\n    ";
$output .=  "    \n    <tr>";
#line 317 "template/en/default/bug/edit.html.tmpl"
$stash->set('can_edit_rep_platform', $stash->get(['bug', 0, 'check_can_change_field', [ 'rep_platform', 0, 1 ]]));
#line 318 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'rep_platform', 0]), 'editable' => $stash->get('can_edit_rep_platform'), 'accesskey' => 'h' });
$output .=  "\n      <td class=\"field_value\">";
#line 323 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['bug_fields', 0, 'rep_platform', 0]), 'no_tds' => 1, 'value' => $stash->get(['bug', 0, 'rep_platform', 0]), 'editable' => $stash->get('can_edit_rep_platform') });
$output .=  "\n        ";
#line 327 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['bug_fields', 0, 'op_sys', 0]), 'no_tds' => 1, 'value' => $stash->get(['bug', 0, 'op_sys', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'op_sys', 0, 1 ]]) });
$output .=  "\n      </td>\n    </tr>\n\n\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_flags' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  ";
#line 962 "template/en/default/bug/edit.html.tmpl"
$stash->set('show_bug_flags', 0);
#line 963 "template/en/default/bug/edit.html.tmpl"
$stash->set('bug_flags_set', 0);
#line 964 "template/en/default/bug/edit.html.tmpl"
$stash->set('show_more_flags', 0);
#line 976 "template/en/default/bug/edit.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['bug', 0, 'flag_types', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'type'} = $_tt_value;
#line 968 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['type', 0, 'flags', 0, 'size', 0]) || ($stash->get(['user', 0, 'id', 0]) && $stash->get(['type', 0, 'is_active', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]]))) {
#line 967 "template/en/default/bug/edit.html.tmpl"
$stash->set('show_bug_flags', 1);
}

#line 971 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0]) && $stash->get(['type', 0, 'is_active', 0]) && (! $stash->get(['type', 0, 'flags', 0, 'size', 0]) || $stash->get(['type', 0, 'is_multiplicable', 0]))) {
#line 970 "template/en/default/bug/edit.html.tmpl"
$stash->set('show_more_flags', 1);
}

#line 974 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['type', 0, 'flags', 0, 'size', 0])) {
#line 973 "template/en/default/bug/edit.html.tmpl"
$stash->set('bug_flags_set', 1);
}

#line 975 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('show_bug_flags') && $stash->get('show_more_flags') && $stash->get('bug_flags_set')) {
last FOR1;
}
;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

#line 1011 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('show_bug_flags')) {
$output .=  "\n    <tr>\n      <th class=\"field_label\">\n        <label>Flags:</label>\n      </th>\n      <td>";
#line 987 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'flag_types', 0, 'size', 0])) {
#line 984 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->process('flag/list.html.tmpl', { 'flag_no_header' => 1, 'flag_types' => $stash->get(['bug', 0, 'flag_types', 0]), 'any_flags_requesteeble' => $stash->get(['bug', 0, 'any_flags_requesteeble', 0]) });
}

#line 1008 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('show_more_flags')) {
$output .=  "\n          <span id=\"bz_flags_more_container\" class=\"bz_default_hidden\">";
#line 990 "template/en/default/bug/edit.html.tmpl"
if (! $stash->get('bug_flags_set')) {
$output .=  "<em>None yet set</em>";
}

$output .=  "\n            (<a href=\"#\" id=\"bz_flags_more_action\">";
#line 991 "template/en/default/bug/edit.html.tmpl"
if (! $stash->get('bug_flags_set')) {
$output .=  "set";
}
else {
$output .=  "more";
}

$output .=  " flags</a>)\n          </span>\n          <script type=\"text/javascript\">\n            YAHOO.util.Dom.removeClass('bz_flags_more_container', 'bz_default_hidden');\n            var table = YAHOO.util.Dom.get(\"flags\");\n            var rows = YAHOO.util.Dom.getElementsByClassName('bz_flag_type', 'tbody', table);\n            for (var i = 0; i < rows.length; i++) {\n                YAHOO.util.Dom.addClass(rows[i], 'bz_default_hidden');\n            }\n            YAHOO.util.Event.addListener('bz_flags_more_action', 'click', function (e) {\n                YAHOO.util.Dom.addClass('bz_flags_more_container', 'bz_default_hidden');\n                for (var i = 0; i < rows.length; i++) {\n                    YAHOO.util.Dom.removeClass(rows[i], 'bz_default_hidden');\n                }\n                YAHOO.util.Event.preventDefault(e);\n            }); \n          </script>";
}

$output .=  "\n      </td>\n    </tr>";
}

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'section_url_keyword_whiteboard' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <tr>";
#line 537 "template/en/default/bug/edit.html.tmpl"
$stash->set('can_edit_bug_file_loc', $stash->get(['bug', 0, 'check_can_change_field', [ 'bug_file_loc', 0, 1 ]]));
#line 538 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'bug_file_loc', 0]), 'editable' => $stash->get('can_edit_bug_file_loc'), 'accesskey' => 'u' });
$output .=  "\n    <td>";
#line 554 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('can_edit_bug_file_loc')) {
$output .=  "\n        <span id=\"bz_url_edit_container\" class=\"bz_default_hidden\"> ";
#line 552 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['is_safe_url', [ $stash->get(['bug', 0, 'bug_file_loc', 0]) ]])) {
$output .=  "\n           <a href=\"";
#line 547 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\" target=\"_blank\"\n              rel=\"noreferrer\" title=\"";
#line 548 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 549 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('truncate', [ 40 ])
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

$output .=  "</a>";
}
else {
#line 551 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
    
    &$_tt_filter($output);
};

}

$output .=  "\n        (<a href=\"#\" id=\"bz_url_edit_action\">edit</a>)</span>";
}

$output .=  "\n      <span id=\"bz_url_input_area\">";
#line 556 "template/en/default/bug/edit.html.tmpl"

# CAPTURE
$stash->set('url_output', do {
    my $output = '';
$output .=  $context->include('input', { 'no_td' => 1, 'inputname' => 'bug_file_loc', 'size' => 40 });
    $output;
});

#line 563 "template/en/default/bug/edit.html.tmpl"
if (! $stash->get(['bug', 0, 'check_can_change_field', [ 'bug_file_loc', 0, 1 ]]) && $stash->get(['is_safe_url', [ $stash->get(['bug', 0, 'bug_file_loc', 0]) ]])) {
$output .=  "\n          <a href=\"";
#line 559 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"\n             rel=\"noreferrer\">";
#line 560 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('none')
              || $context->throw($context->error);

$output .=  $stash->get('url_output');
    
    &$_tt_filter($output);
};

$output .=  "</a>";
}
else {
#line 562 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('none')
              || $context->throw($context->error);

$output .=  $stash->get('url_output');
    
    &$_tt_filter($output);
};

}

$output .=  "\n      </span>";
#line 573 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['bug', 0, 'check_can_change_field', [ 'bug_file_loc', 0, 1 ]])) {
$output .=  "\n        <script type=\"text/javascript\">\n          hideEditableField('bz_url_edit_container', \n                            'bz_url_input_area', \n                            'bz_url_edit_action', \n                            'bug_file_loc', \n                            \"";
#line 571 "template/en/default/bug/edit.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'bug_file_loc', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\");\n        </script>";
}

$output .=  "\n    </td>\n  </tr>\n";
#line 586 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['Param', [ 'usestatuswhiteboard' ]])) {
$output .=  "\n    <tr>";
#line 579 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field-label.html.tmpl', { 'field' => $stash->get(['bug_fields', 0, 'status_whiteboard', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'status_whiteboard', 0, 1 ]]), 'accesskey' => 'w' });
#line 584 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('input', { 'inputname' => 'status_whiteboard', 'size' => 40 });
$output .=  "\n    </tr>";
}

$output .=  "\n";
#line 596 "template/en/default/bug/edit.html.tmpl"
if ($stash->get('use_keywords')) {
$output .=  "\n    <tr>";
#line 590 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['bug_fields', 0, 'keywords', 0]), 'value' => $stash->get(['bug', 0, 'keywords', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'keywords', 0, 1 ]]), 'desc_url' => 'describekeywords.cgi', 'possible_values' => $stash->get('all_keywords') });
$output .=  "\n    </tr>";
}

$output .=  "\n";
#line 605 "template/en/default/bug/edit.html.tmpl"
if ($stash->get(['user', 0, 'id', 0])) {
$output .=  "\n    <tr>";
#line 600 "template/en/default/bug/edit.html.tmpl"
$output .=  $context->include('bug/field.html.tmpl', { 'bug' => $stash->get('bug'), 'field' => $stash->get(['bug_fields', 0, 'tag', 0]), 'value' => $stash->get(['bug', 0, 'tags', 0, 'join', [ ', ' ]]), 'editable' => 1, 'possible_values' => $stash->get(['user', 0, 'tags', 0, 'keys', 0]) });
$output .=  "\n    </tr>";
}

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    },
});
