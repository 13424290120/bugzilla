use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'email/header-common.txt.tmpl',
        'modtime' => '1483774492',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 10 "template/en/default/email/header-common.txt.tmpl"
if ($stash->get(['Param', [ 'useclassification' ]])) {
$output .=  "\nX-Bugzilla-Classification: ";
#line 9 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'classification', 0]);
}

$output .=  "\nX-Bugzilla-Product: ";
#line 11 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'product', 0]);
$output .=  "\nX-Bugzilla-Component: ";
#line 12 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'component', 0]);
$output .=  "\nX-Bugzilla-Version: ";
#line 13 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'version', 0]);
$output .=  "\nX-Bugzilla-Keywords: ";
#line 14 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'keywords', 0]);
$output .=  "\nX-Bugzilla-Severity: ";
#line 15 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_severity', 0]);
$output .=  "\nX-Bugzilla-Who: ";
#line 16 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['changer', 0, 'login', 0]);
$output .=  "\nX-Bugzilla-Status: ";
#line 17 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_status', 0]);
$output .=  "\nX-Bugzilla-Resolution: ";
#line 18 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'resolution', 0]);
$output .=  "\nX-Bugzilla-Priority: ";
#line 19 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'priority', 0]);
$output .=  "\nX-Bugzilla-Assigned-To: ";
#line 20 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'assigned_to', 0, 'login', 0]);
#line 23 "template/en/default/email/header-common.txt.tmpl"
if ($stash->get(['Param', [ 'usetargetmilestone' ]])) {
$output .=  "\nX-Bugzilla-Target-Milestone: ";
#line 22 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'target_milestone', 0]);
}

$output .=  "\nX-Bugzilla-Flags:";
#line 24 "template/en/default/email/header-common.txt.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['bug', 0, 'flags', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'flag'} = $_tt_value;
$output .=  " ";
#line 24 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['flag', 0, 'name', 0]);
#line 24 "template/en/default/email/header-common.txt.tmpl"
$output .=  $stash->get(['flag', 0, 'status', 0]);;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
