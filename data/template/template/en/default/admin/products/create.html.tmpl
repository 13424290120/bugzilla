use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1483774492',
        'name' => 'admin/products/create.html.tmpl',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n";
$output .=  "\n";
#line 16 "template/en/default/admin/products/create.html.tmpl"

# CAPTURE
$stash->set('title', do {
    my $output = '';
$output .=  "Add Product";
    $output;
});

$output .=  "\n";
#line 18 "template/en/default/admin/products/create.html.tmpl"
$output .=  $context->process('global/header.html.tmpl', { 'title' => $stash->get('title'), 'generate_api_token' => 1, 'style_urls' => [ 'skins/standard/admin.css' ], 'javascript_urls' => [ 'js/util.js', 'js/field.js' ], 'yui' => [ 'autocomplete' ] });
$output .=  "\n";
#line 26 "template/en/default/admin/products/create.html.tmpl"
$stash->set(['product', 0, 'is_active', 0], 1, 1);
$stash->set('version', 'unspecified', 1);
$stash->set(['product', 0, 'defaultmilestone', 0], '---', 1);
$stash->set(['product', 0, 'allows_unconfirmed', 0], 1, 1);
$output .=  "\n\n<form method=\"post\" action=\"editproducts.cgi\">\n  <table id=\"admin_table_edit\">\n";
#line 36 "template/en/default/admin/products/create.html.tmpl"
$output .=  $context->process('admin/products/edit-common.html.tmpl');
$output .=  "\n\n    <tr>\n      <th>Version:</th>\n      <td><input size=\"20\" maxlength=\"64\" name=\"version\" \n                value=\"";
#line 41 "template/en/default/admin/products/create.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('version');
    
    &$_tt_filter($output);
};

$output .=  "\" required>\n      </td>\n    </tr>\n    <tr>\n      <th>Create chart datasets for this product:</th>\n      <td>\n        <input type=\"checkbox\" name=\"createseries\" value=\"1\" checked=\"checked\">\n      </td>\n    </tr>\n\n    <tr>\n      <td colspan=\"2\">&nbsp;</td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">\n        This product must have at least one component.\n        You will be able to create additional components later:\n      </td>\n    </tr>\n";
#line 61 "template/en/default/admin/products/create.html.tmpl"
$output .=  $context->process('admin/components/edit-common.html.tmpl', { 'desc_name' => 'comp_desc' });
$output .=  "\n  </table>\n\n  <input type=\"submit\" id=\"add-product\" value=\"Add\">\n  <input type=\"hidden\" name=\"action\" value=\"new\">\n  <input type=\"hidden\" name=\"token\" value=\"";
#line 66 "template/en/default/admin/products/create.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('token');
    
    &$_tt_filter($output);
};

$output .=  "\">\n  <input type=\"hidden\" name=\"classification\"\n        value=\"";
#line 68 "template/en/default/admin/products/create.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['classification', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">\n</form>\n";
#line 71 "template/en/default/admin/products/create.html.tmpl"
$output .=  $context->process('admin/products/footer.html.tmpl', { 'no_add_product_link' => 1, 'no_edit_product_link' => 1 });
$output .=  "\n";
#line 75 "template/en/default/admin/products/create.html.tmpl"
$output .=  $context->process('global/footer.html.tmpl');
$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
