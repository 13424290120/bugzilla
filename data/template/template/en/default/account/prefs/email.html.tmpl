use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1483774492',
        'name' => 'account/prefs/email.html.tmpl',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n";
$output .=  "\n\n";
#line 29 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['user', 0, 'email_disabled', 0])) {
$output .=  "\n  <div class=\"warningmessages\">\n    Your ";
#line 25 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  "mail has been disabled by the ";
#line 25 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
$output .=  "\n    administrator.  Please contact ";
#line 26 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['Param', [ 'maintainer' ]]);
$output .=  " to enable\n    ";
#line 27 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  "mails.\n  </div>";
}

$output .=  "\n";
#line 37 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['user', 0, 'authorizer', 0, 'can_change_email', 0]) && $stash->get(['Param', [ 'allowemailchange' ]])) {
$output .=  "\n  <p>\n    If you want to change your e-mail address\n    <b>";
#line 34 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['user', 0, 'email', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</b> to which ";
#line 34 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
$output .=  " sends\n    notifications, click the \"Account Information\" tab above.\n  </p>";
}

$output .=  "\n\n<p>\n  If you don't like getting a notification for \"trivial\"\n  changes to ";
#line 41 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  ", you can use the settings below to\n  filter some or all notifications.\n</p>\n\n<script type=\"text/javascript\">\n<!--\nfunction SetCheckboxes(setting) {\n  for (var count = 0; count < document.userprefsform.elements.length; count++) {\n    var theinput = document.userprefsform.elements[count];\n    if (theinput.type == \"checkbox\"\n        && !theinput.disabled\n        && !theinput.name.match(\"remove_ignored_bug\"))\n    {\n      if (theinput.name.match(\"neg\")) {\n        theinput.checked = !setting;\n      }\n      else {\n        theinput.checked = setting;\n      }\n    }\n  }\n}\n// -->\n</script>\n\n<input type=\"button\" value=\"Enable All Mail\" onclick=\"SetCheckboxes(true); return false;\">\n<input type=\"button\" value=\"Disable All Mail\" onclick=\"SetCheckboxes(false); return false;\">\n\n<hr>\n\n<h3>Global options</h3>\n";
#line 1 "template/en/default/account/prefs/email.html.tmpl"
$stash->set('prefname', ("email-" . '100' . "-" . '100'));
$output .=  "\n<input type=\"checkbox\" name=\"";
#line 74 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get('prefname');
$output .=  "\" id=\"";
#line 74 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get('prefname');
$output .=  "\" value=\"1\"\n       ";
#line 75 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['user', 0, 'mail_settings', 0, '100', 0, '100', 0])) {
$output .=  'checked="checked"';
}

$output .=  ">\n<label for=\"";
#line 76 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get('prefname');
$output .=  "\">Email me when someone asks me to set a flag</label>\n<br>";
#line 1 "template/en/default/account/prefs/email.html.tmpl"
$stash->set('prefname', ("email-" . '100' . "-" . '101'));
$output .=  "\n<input type=\"checkbox\" name=\"";
#line 79 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get('prefname');
$output .=  "\" id=\"";
#line 79 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get('prefname');
$output .=  "\" value=\"1\"\n       ";
#line 80 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['user', 0, 'mail_settings', 0, '100', 0, '101', 0])) {
$output .=  'checked="checked"';
}

$output .=  ">\n<label for=\"";
#line 81 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get('prefname');
$output .=  "\">Email me when someone sets a flag I asked for</label>\n";
#line 88 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['user', 0, 'is_global_watcher', 0])) {
$output .=  "\n  <p>\n    You are watching all ";
#line 85 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  ". To be removed from this role, contact\n    <a href=\"mailto:";
#line 86 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['Param', [ 'maintainer' ]]);
$output .=  "\">";
#line 86 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['Param', [ 'maintainer' ]]);
$output .=  "</a>.\n  </p>";
}

$output .=  "\n\n<hr>\n\n<h3>Field/recipient specific options</h3>\n";
#line 1 "template/en/default/account/prefs/email.html.tmpl"
$stash->set('events', [ { 'id' => '1', 'description' => 'I\'m added to or removed from this capacity'  }, { 'id' => '10', 'description' => ("A new " . $stash->get(['terms', 0, 'bug', 0]) . " is created")  }, { 'id' => '6', 'description' => ("The " . $stash->get(['terms', 0, 'bug', 0]) . " is resolved or reopened")  }, { 'id' => '11', 'description' => 'The product or component changes'  }, { 'id' => '5', 'description' => 'The priority, status, severity, or milestone changes'  }, { 'id' => '2', 'description' => 'New comments are added'  }, { 'id' => '3', 'description' => 'New attachments are added'  }, { 'id' => '4', 'description' => 'Attachment details changes'  }, { 'id' => '7', 'description' => 'The keywords field changes'  }, { 'id' => '8', 'description' => 'The CC field changes'  }, { 'id' => '9', 'description' => 'The dependency tree changes'  }, { 'id' => '0', 'description' => 'Any field not mentioned above changes'  } ]);
$output .=  "\n";
#line 1 "template/en/default/account/prefs/email.html.tmpl"
$stash->set('neg_events', [ { 'id' => '50', 'description' => ("The " . $stash->get(['terms', 0, 'bug', 0]) . " is in the UNCONFIRMED state")  }, { 'id' => '51', 'description' => 'The change was made by me'  } ]);
$output .=  "\n";
#line 128 "template/en/default/account/prefs/email.html.tmpl"
$stash->set('relationships', [ { 'id' => '0', 'description' => 'Assignee'  }, { 'id' => '2', 'description' => 'Reporter'  }, { 'id' => '3', 'description' => 'CCed'  } ]);
$output .=  "\n";
#line 140 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['Param', [ 'useqacontact' ]])) {
#line 138 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['relationships', 0, 'push', [ { 'id' => '1', 'description' => 'QA Contact'  } ]]);
}

$output .=  "\n\n\n";
#line 144 "template/en/default/account/prefs/email.html.tmpl"
$stash->set('no_added_removed', [ '2' ]);
$output .=  "\n";
#line 146 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['Hook', 0, 'process', [ 'relationships' ]]);
$output .=  "\n";
#line 148 "template/en/default/account/prefs/email.html.tmpl"
$stash->set('num_columns', $stash->get(['relationships', 0, 'size', 0]));
$output .=  "\n\n<table id=\"email_prefs\">\n  <tr class=\"column_header\">\n    <th colspan=\"";
#line 152 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('num_columns');
    
    &$_tt_filter($output);
};

$output .=  "\">\n      When my relationship to this ";
#line 153 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " is:\n    </th>\n    <th>I want to receive mail when:</th>\n  </tr>\n\n  <tr>";
#line 161 "template/en/default/account/prefs/email.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('relationships');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'relationship'} = $_tt_value;
$output .=  "\n      <th class=\"role_header\">";
#line 160 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['relationship', 0, 'description', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</th>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n  </tr>\n";
#line 184 "template/en/default/account/prefs/email.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('events');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'event'} = $_tt_value;
$output .=  "  ";
#line 165 "template/en/default/account/prefs/email.html.tmpl"
$stash->set('count', $stash->get(['loop', 0, 'count', 0]));
$output .=  "\n    <tr class=\"bz_row_";
#line 166 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get('count') % 2 eq 1 ? 'odd' : 'even';
$output .=  "\">";
#line 179 "template/en/default/account/prefs/email.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('relationships');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR2:   while (! $_tt_error) {
            $stash->{'relationship'} = $_tt_value;
$output .=  "\n        <td class=\"center\">\n          <input type=\"checkbox\" value=\"1\"\n                 name=\"email-";
#line 170 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['relationship', 0, 'id', 0]);
$output .=  "-";
#line 170 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['event', 0, 'id', 0]);
$output .=  "\"\n                 ";
#line 177 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['event', 0, 'id', 0]) eq '1' && $stash->get(['no_added_removed', 0, 'contains', [ $stash->get(['relationship', 0, 'id', 0]) ]])) {
$output .=  "\n                   disabled=\"disabled\"";
}
elsif ($stash->get(['user', 0, 'mail_settings', 0, $stash->get(['relationship', 0, 'id', 0]), 0, $stash->get(['event', 0, 'id', 0]), 0])) {
$output .=  "\n                   checked=\"checked\"";
}

$output .=  ">\n        </td>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n      <td>";
#line 181 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['event', 0, 'description', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\n      </td>\n    </tr>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n  <tr class=\"column_header\">\n    <th colspan=\"";
#line 187 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('num_columns');
    
    &$_tt_filter($output);
};

$output .=  "\">&nbsp;</th>\n    <th>but not when (overrides above):</th>\n  </tr>\n";
#line 203 "template/en/default/account/prefs/email.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('neg_events');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'event'} = $_tt_value;
$output .=  "  ";
#line 192 "template/en/default/account/prefs/email.html.tmpl"
$stash->set('count', $stash->get(['loop', 0, 'count', 0]));
$output .=  "\n    <tr class=\"bz_row_";
#line 193 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get('count') % 2 eq 1 ? 'odd' : 'even';
$output .=  "\">";
#line 200 "template/en/default/account/prefs/email.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('relationships');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR2:   while (! $_tt_error) {
            $stash->{'relationship'} = $_tt_value;
$output .=  "\n        <td class=\"center\">\n          <input type=\"checkbox\" value=\"1\"\n                 name=\"neg-email-";
#line 197 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['relationship', 0, 'id', 0]);
$output .=  "-";
#line 197 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['event', 0, 'id', 0]);
$output .=  "\"\n                 ";
#line 198 "template/en/default/account/prefs/email.html.tmpl"
if (! $stash->get(['user', 0, 'mail_settings', 0, $stash->get(['relationship', 0, 'id', 0]), 0, $stash->get(['event', 0, 'id', 0]), 0])) {
$output .=  'checked="checked"';
}

$output .=  ">\n        </td>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n      <td>";
#line 201 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['event', 0, 'description', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</td>\n    </tr>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n</table>\n\n<hr>\n\n<h3>User Watching</h3>\n\n<p>\nIf you watch a user, it is as if you are standing in their shoes for the \npurposes of getting email. Email is sent or not according to <em>your</em>\npreferences for <em>their</em> relationship to the ";
#line 213 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  "\n(e.g. Assignee).\n</p>\n";
#line 231 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['watchedusers', 0, 'size', 0])) {
$output .=  "\n  <p>You are watching everyone in the following list:</p>\n  <p>\n    <select id=\"watched_by_you\" name=\"watched_by_you\" multiple=\"multiple\" size=\"5\">";
#line 223 "template/en/default/account/prefs/email.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('watchedusers');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'w'} = $_tt_value;
$output .=  "\n           <option value=\"";
#line 222 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('w');
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 222 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('w');
    
    &$_tt_filter($output);
};

$output .=  "</option>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n    </select>\n    <br>\n    <input type=\"checkbox\" id=\"remove_watched_users\" name=\"remove_watched_users\">\n    <label for=\"remove_watched_users\">Remove selected users from my watch list</label>\n  </p>";
}
else {
$output .=  "\n  <p>You are currently not watching any users.</p>";
}

$output .=  "\n\n\n<p id=\"new_watched_by_you\">Add users to my watch list (comma separated list):";
#line 235 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $context->include('global/userselect.html.tmpl', { 'id' => 'new_watchedusers', 'name' => 'new_watchedusers', 'value' => '', 'size' => 60, 'multiple' => 5 });
$output .=  "\n</p>\n\n<p id=\"watching_you\">Users watching you:<br>";
#line 251 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['watchers', 0, 'size', 0])) {
#line 248 "template/en/default/account/prefs/email.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('watchers');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'watcher'} = $_tt_value;
#line 247 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('watcher');
    
    &$_tt_filter($output);
};

$output .=  " <br>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

}
else {
$output .=  "\n    <i>No one</i>";
}

$output .=  "\n</p>\n\n<hr>\n\n<h3>Ignore ";
#line 256 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugs', 0]);
$output .=  "</h3>\n\n<p>\n  You can specify a list of ";
#line 259 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  " from which you never want to get\n  any email notification of any kind by adding their ID(s) as a comma-separated\n  list. Removing ";
#line 261 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'abug', 0]);
$output .=  " by selecting it from the current ignored list \n  will re-enable email notifications for the ";
#line 262 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ".\n</p>";
#line 288 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['user', 0, 'bugs_ignored', 0, 'size', 0])) {
$output .=  "\n  <p>\n    You are currently ignoring:\n    <table>";
#line 285 "template/en/default/account/prefs/email.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['user', 0, 'bugs_ignored', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'bug'} = $_tt_value;
$output .=  "\n      <tr>\n        <td>\n          <input type=\"checkbox\" name=\"remove_ignored_bug_";
#line 271 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'id', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\" value=\"1\">\n        </td>\n        <td><a href=\"";
#line 273 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('urlbase');
    
    &$_tt_filter($output);
};

$output .=  "show_bug.cgi?id=";
#line 273 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('uri')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'id', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 274 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'id', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</a>\n        </td>\n        <td>";
#line 276 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'status', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</td>\n        <td>";
#line 282 "template/en/default/account/prefs/email.html.tmpl"
if ($stash->get(['user', 0, 'can_see_bug', [ $stash->get(['bug', 0, 'id', 0]) ]])) {
$output .=  "\n            - ";
#line 279 "template/en/default/account/prefs/email.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['bug', 0, 'summary', 0]);
    
    &$_tt_filter($output);
};

}
else {
$output .=  "\n            (private)";
}

$output .=  "\n        </td>\n      </tr>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n    </table>\n  </p>";
}

$output .=  "\n\n<p>\n  Add ";
#line 291 "template/en/default/account/prefs/email.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  ":<br>\n  <input type=\"text\" id=\"add_ignored_bugs\" \n         name=\"add_ignored_bugs\" size=\"60\">\n</p>\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
