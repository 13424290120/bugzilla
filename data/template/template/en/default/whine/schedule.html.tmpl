use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'whine/schedule.html.tmpl',
        'modtime' => '1483774492',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n";
$output .=  "\n";
#line 22 "template/en/default/whine/schedule.html.tmpl"
$stash->set('title', 'Set up whining');
#line 23 "template/en/default/whine/schedule.html.tmpl"
$output .=  $context->process('global/header.html.tmpl', { 'title' => $stash->get('title'), 'style_urls' => [ 'skins/standard/admin.css' ], 'doc_section' => 'using/index.html' });
$output .=  "\n\n<p>\n  \"Whining\" is when Bugzilla executes a saved search at a regular interval\n  and sends the resulting list of ";
#line 31 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  " via email.\n</p>\n\n<p>\n  To set up a new whine event, click \"Add a new event.\"  Enter a subject line\n  for the message that will be sent, along with a block of text that will\n  accompany the ";
#line 37 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " list in the body of the message.\n</p>\n\n<p>\n  Schedules are added to an event by clicking on \"Add a new schedule.\"  A schedule\n  consists of a day, a time of day or interval of times\n  (e.g., every 15 minutes), and a target email address that may or may not be\n  alterable, depending on your privileges.  Events may have more than one schedule\n  in order to run at multiple times or for different users.\n</p>\n\n<p>\n  Searches come from saved searches, which are created by executing a <a\n  href=\"query.cgi\">search</a>, then telling Bugzilla to remember\n  the search under a particular name.  Add a search by clicking \"Add a \n  search\", and select the desired saved search name under \"Search\" and add a\n  title for the ";
#line 53 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " table.  The optional number entered under\n  \"Sort\" will determine the execution order (lowest to highest) if multiple\n  queries are listed.  If you check \"One message per ";
#line 55 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ",\" each ";
#line 56 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  " that matches the search will be sent in its own email message.\n</p>\n\n<p>\n  All times are server local time (";
#line 60 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('local_timezone');
    
    &$_tt_filter($output);
};

$output .=  ").\n</p>\n\n<form method=\"post\" action=\"editwhines.cgi\">\n";
$output .=  "\n<input type=\"submit\" value=\"Update / Commit\" id=\"commit\" name=\"commit\"\n       class=\"bz_default_hidden\">\n<input type=\"hidden\" name=\"update\" value=\"1\">\n<input type=\"hidden\" name=\"token\" value=\"";
#line 69 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('token');
    
    &$_tt_filter($output);
};

$output .=  "\">\n";
#line 282 "template/en/default/whine/schedule.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('events');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'event'} = $_tt_value;
$output .=  "\n\n<table class=\"whining_list\">\n  <tr>\n    <th class=\"subtitle\">Event:</th>\n    <th colspan=\"2\">\n      <input type=\"submit\" value=\"Remove Event\"\n             name=\"remove_event_";
#line 78 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "\"\n             id=\"remove_event_";
#line 79 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "\">\n    </th>\n  </tr>\n\n  <tr>\n    <th>Email subject line:</th>\n    <td colspan=\"2\">\n      <input type=\"text\" name=\"event_";
#line 86 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "_subject\"\n             size=\"60\" maxlength=\"128\" value=\"";
#line 88 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['event', 0, 'value', 0, 'subject', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">\n    </td>\n  </tr>\n\n  <tr>\n    <th>Descriptive text sent within whine message:</th>\n    <td colspan=\"2\">";
#line 1 "template/en/default/whine/schedule.html.tmpl"
$output .=  $context->include('global/textarea.html.tmpl', { 'name' => ("event_" . $stash->get(['event', 0, 'key', 0]) . "_body"), 'minrows' => 3, 'maxrows' => 10, 'defaultrows' => 5, 'cols' => 80, 'defaultcontent' => $stash->get(['event', 0, 'value', 0, 'body', 0]) });
$output .=  "\n    </td>\n  </tr>\n\n  <tr>\n    <th>Send a message even if there are no ";
#line 107 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bugs', 0]);
$output .=  " in the search result:</th>\n    <td colspan=\"2\">\n      <input type=\"checkbox\" name=\"event_";
#line 109 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "_mailifnobugs\"";
#line 110 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get(['event', 0, 'value', 0, 'mailifnobugs', 0]) eq 1) {
$output .=  " checked ";
}

$output .=  ">\n    </td>\n  </tr>\n";
#line 194 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get(['event', 0, 'value', 0, 'schedule', 0, 'size', 0]) eq 0) {
$output .=  "\n\n    <tr>\n      <th>Schedule:</th>\n      <td class=\"unset\" colspan=\"2\">\n        Not scheduled to run<br>\n        <input type=\"submit\" value=\"Add a new schedule\"\n               name=\"add_schedule_";
#line 121 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "\"\n               id=\"add_schedule_";
#line 122 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "\">\n      </td>\n    </tr>\n";
}
else {
$output .=  "\n\n    <tr>\n      <th>Schedule:</th>\n      <td class=\"set\" colspan=\"2\">\n\n        <table class=\"schedule_list\">\n          <tr>\n            <th>Interval</th>\n            <th>";
#line 138 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get('mail_others')) {
$output .=  "\n                Mail to";
}

$output .=  "\n            </th>\n            <th></th>\n          </tr>\n";
#line 180 "template/en/default/whine/schedule.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['event', 0, 'value', 0, 'schedule', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR2:   while (! $_tt_error) {
            $stash->{'schedule'} = $_tt_value;
$output .=  "\n            <tr>\n              <td>\n                ";
$output .=  "\n\n                <input type=\"hidden\" value=\"";
#line 149 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['schedule', 0, 'day', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"\n                       name=\"orig_day_";
#line 150 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['schedule', 0, 'id', 0]);
$output .=  "\">\n                <input type=\"hidden\" value=\"";
#line 151 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['schedule', 0, 'time', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"\n                       name=\"orig_time_";
#line 152 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['schedule', 0, 'id', 0]);
$output .=  "\">";
#line 153 "template/en/default/whine/schedule.html.tmpl"
$output .=  $context->process('day_field', { 'val' => $stash->get(['schedule', 0, 'day', 0]) });
#line 154 "template/en/default/whine/schedule.html.tmpl"
$output .=  $context->process('time_field', { 'val' => $stash->get(['schedule', 0, 'time', 0]) });
$output .=  "\n              </td>\n              <td>";
#line 172 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get('mail_others')) {
$output .=  "\n                  <input type=\"hidden\" name=\"orig_mailto_type_";
#line 158 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['schedule', 0, 'id', 0]);
$output .=  "\"\n                         value=\"";
#line 159 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['schedule', 0, 'mailto_type', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">\n                  <select name=\"mailto_type_";
#line 160 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['schedule', 0, 'id', 0]);
$output .=  "\">\n                    <option value=\"0\" ";
#line 163 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get(['schedule', 0, 'mailto_type', 0]) eq 0) {
$output .=  "\n                                        selected";
}

$output .=  ">User</option>\n                    <option value=\"1\" ";
#line 166 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get(['schedule', 0, 'mailto_type', 0]) eq 1) {
$output .=  "\n                                        selected";
}

$output .=  ">Group</option>\n                  </select>\n                  <input type=\"hidden\" name=\"orig_mailto_";
#line 168 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['schedule', 0, 'id', 0]);
$output .=  "\"\n                         value=\"";
#line 169 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['schedule', 0, 'mailto', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">\n                  <input type=\"text\" name=\"mailto_";
#line 170 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['schedule', 0, 'id', 0]);
$output .=  "\"\n                         value=\"";
#line 171 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['schedule', 0, 'mailto', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\" size=\"30\">";
}

$output .=  "\n              </td>\n              <td>\n                <input type=\"submit\" value=\"Remove\"\n                       name=\"remove_schedule_";
#line 176 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['schedule', 0, 'id', 0]);
$output .=  "\"\n                       id=\"remove_schedule_";
#line 177 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['schedule', 0, 'id', 0]);
$output .=  "\">\n              </td>\n            </tr>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n          <tr>\n            <td colspan=\"3\">\n              <input type=\"submit\" value=\"Add a new schedule\"\n                     name=\"add_schedule_";
#line 185 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "\"\n                     id=\"add_schedule_";
#line 186 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "\">\n            </td>\n          </tr>\n        </table>\n\n      </td>\n    </tr>\n";
}

$output .=  "\n";
#line 278 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get(['event', 0, 'value', 0, 'queries', 0, 'size', 0]) eq 0) {
$output .=  "\n\n    <tr>\n      <th>Searches:</th>\n      <td>\n        No searches <br>\n        <input type=\"submit\" value=\"Add a search\"\n               name=\"add_query_";
#line 203 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "\"\n               id=\"add_query_";
#line 204 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "\">\n      </td>\n      <td class=\"right\">\n        <input type=\"submit\" value=\"Update / Commit\" name=\"commit\" id=\"update\">\n      </td>\n    </tr>\n";
}
else {
$output .=  "\n\n    <tr>\n      <th>Searches:</th>\n      <td colspan=\"2\">\n\n        <table class=\"search_list\">\n          <tr>\n            <th>Sort</th>\n            <th>Search</th>\n            <th>Title</th>\n            <th colspan=\"2\"></th>\n          </tr>\n";
#line 261 "template/en/default/whine/schedule.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['event', 0, 'value', 0, 'queries', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR2:   while (! $_tt_error) {
            $stash->{'query'} = $_tt_value;
$output .=  "\n\n            <tr>\n              <td>\n                <input type=\"text\" name=\"query_sort_";
#line 229 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\"\n                       size=\"3\" value=\"";
#line 230 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'sort', 0]);
$output .=  "\">\n                <input type=\"hidden\" value=\"";
#line 231 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'sort', 0]);
$output .=  "\"\n                       name=\"orig_query_sort_";
#line 232 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\">\n              </td>\n              <td>\n                <input type=\"hidden\" value=\"";
#line 235 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['query', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"\n                       name=\"orig_query_name_";
#line 236 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\">";
#line 237 "template/en/default/whine/schedule.html.tmpl"
$output .=  $context->process('query_field', { 'thisquery' => $stash->get(['query', 0, 'name', 0]) });
$output .=  "\n              </td>\n              <td>\n                <input type=\"hidden\" value=\"";
#line 240 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['query', 0, 'title', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"\n                       name=\"orig_query_title_";
#line 241 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\">\n                <input type=\"text\" name=\"query_title_";
#line 242 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\"\n                       size=\"50\" value=\"";
#line 243 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['query', 0, 'title', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"\n                       maxlength=\"64\">\n              </td>\n              <td>\n                <input type=\"hidden\" value=\"";
#line 247 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['query', 0, 'onemailperbug', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"\n                       name=\"orig_query_onemailperbug_";
#line 248 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\">\n                <input type=\"checkbox\" ";
#line 249 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get(['query', 0, 'onemailperbug', 0]) eq 1) {
$output .=  " checked ";
}

$output .=  "\n                       id=\"query_onemailperbug_";
#line 250 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\"\n                       name=\"query_onemailperbug_";
#line 251 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\">\n                <label for=\"query_onemailperbug_";
#line 252 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\">One message per ";
#line 252 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  "</label>\n              </td>\n              <td>\n                <input type=\"submit\" value=\"Remove\"\n                       name=\"remove_query_";
#line 256 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\"\n                       id=\"remove_query_";
#line 257 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\">\n              </td>\n            </tr>\n";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n          <tr>\n            <td colspan=\"3\">\n              <input type=\"submit\" value=\"Add a search\"\n                     name=\"add_query_";
#line 266 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "\"\n                     id=\"add_query_";
#line 267 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['event', 0, 'key', 0]);
$output .=  "\">\n            </td>\n            <td colspan=\"2\" class=\"right\">\n              <input type=\"submit\" value=\"Update / Commit\" name=\"commit\" id=\"update\">\n            </td>\n          </tr>\n        </table>\n\n      </td>\n    </tr>\n";
}

$output .=  "\n\n</table>\n";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n<p>\n  <input type=\"submit\" value=\"Add a new event\" name=\"add_event\" id=\"add_event\">\n</p>\n\n</form>\n";
#line 290 "template/en/default/whine/schedule.html.tmpl"
$output .=  $context->process('global/footer.html.tmpl');
$output .=  "\n";

$output .=  "\n";

$output .=  "\n";

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {
        'query_field' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n";
#line 306 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get(['available_queries', 0, 'size', 0]) > 0) {
$output .=  "\n\n    <select name=\"query_name_";
#line 296 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['query', 0, 'id', 0]);
$output .=  "\">";
#line 301 "template/en/default/whine/schedule.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('available_queries');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'q'} = $_tt_value;
$output .=  "\n        <option ";
#line 298 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get('q') eq $stash->get('thisquery')) {
$output .=  'selected';
}

$output .=  " value=\"";
#line 298 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('q');
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 299 "template/en/default/whine/schedule.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('q');
    
    &$_tt_filter($output);
};

$output .=  "\n        </option>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n    </select>\n";
}
else {
$output .=  "\n    Please visit the <a href=\"query.cgi\">Search</a> page and save a search";
}

$output .=  "\n\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'time_field' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n<select name=\"time_";
#line 369 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['schedule', 0, 'id', 0]);
$output .=  "\">\n";
#line 372 "template/en/default/whine/schedule.html.tmpl"
$stash->set('options', [ [ '0', 'at midnight' ], [ '1', 'at 01:00' ], [ '2', 'at 02:00' ], [ '3', 'at 03:00' ], [ '4', 'at 04:00' ], [ '5', 'at 05:00' ], [ '6', 'at 06:00' ], [ '7', 'at 07:00' ], [ '8', 'at 08:00' ], [ '9', 'at 09:00' ], [ '10', 'at 10:00' ], [ '11', 'at 11:00' ], [ '12', 'at 12:00' ], [ '13', 'at 13:00' ], [ '14', 'at 14:00' ], [ '15', 'at 15:00' ], [ '16', 'at 16:00' ], [ '17', 'at 17:00' ], [ '18', 'at 18:00' ], [ '19', 'at 19:00' ], [ '20', 'at 20:00' ], [ '21', 'at 21:00' ], [ '22', 'at 22:00' ], [ '23', 'at 23:00' ], [ '60min', 'every hour' ], [ '30min', 'every 30 minutes' ], [ '15min', 'every 15 minutes' ] ]);
$output .=  "\n";
#line 408 "template/en/default/whine/schedule.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('options');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'option'} = $_tt_value;
$output .=  "\n        <option value=\"";
#line 404 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['option', 0, 0, 0]);
$output .=  "\" ";
#line 405 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get('val') eq $stash->get(['option', 0, 0, 0])) {
$output .=  " selected";
}

$output .=  ">";
#line 406 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['option', 0, 1, 0]);
$output .=  "        </option>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n</select>\n\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'day_field' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <select name=\"day_";
#line 311 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['schedule', 0, 'id', 0]);
$output .=  "\">";
#line 313 "template/en/default/whine/schedule.html.tmpl"
$stash->set('options', [ [ 'All', 'Each day' ], [ 'MF', 'Monday through Friday' ], [ 'Sun', 'Sunday' ], [ 'Mon', 'Monday' ], [ 'Tue', 'Tuesday' ], [ 'Wed', 'Wednesday' ], [ 'Thu', 'Thursday' ], [ 'Fri', 'Friday' ], [ 'Sat', 'Saturday' ], [ '1', 'On the 1st of the month' ], [ '2', 'On the 2nd of the month' ], [ '3', 'On the 3rd of the month' ], [ '4', 'On the 4th of the month' ], [ '5', 'On the 5th of the month' ], [ '6', 'On the 6th of the month' ], [ '7', 'On the 7th of the month' ], [ '8', 'On the 8th of the month' ], [ '9', 'On the 9th of the month' ], [ '10', 'On the 10th of the month' ], [ '11', 'On the 11th of the month' ], [ '12', 'On the 12th of the month' ], [ '13', 'On the 13th of the month' ], [ '14', 'On the 14th of the month' ], [ '15', 'On the 15th of the month' ], [ '16', 'On the 16th of the month' ], [ '17', 'On the 17th of the month' ], [ '18', 'On the 18th of the month' ], [ '19', 'On the 19th of the month' ], [ '20', 'On the 20th of the month' ], [ '21', 'On the 21st of the month' ], [ '22', 'On the 22nd of the month' ], [ '23', 'On the 23rd of the month' ], [ '24', 'On the 24th of the month' ], [ '25', 'On the 25th of the month' ], [ '26', 'On the 26th of the month' ], [ '27', 'On the 27th of the month' ], [ '28', 'On the 28th of the month' ], [ '29', 'On the 29th of the month' ], [ '30', 'On the 30th of the month' ], [ '31', 'On the 31st of the month' ], [ 'last', 'Last day of the month' ] ]);
$output .=  "\n";
#line 363 "template/en/default/whine/schedule.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('options');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'option'} = $_tt_value;
$output .=  "\n        <option value=\"";
#line 359 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['option', 0, 0, 0]);
$output .=  "\" ";
#line 360 "template/en/default/whine/schedule.html.tmpl"
if ($stash->get('val') eq $stash->get(['option', 0, 0, 0])) {
$output .=  " selected";
}

$output .=  ">";
#line 361 "template/en/default/whine/schedule.html.tmpl"
$output .=  $stash->get(['option', 0, 1, 0]);
$output .=  "        </option>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n  </select>\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    },
});
