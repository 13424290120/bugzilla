use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'email/flagmail.txt.tmpl',
        'modtime' => '1483774492',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n";
#line 9 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('bugidsummary', $stash->get(['bug', 0, 'bug_id', 0])  . ': '  . $stash->get(['bug', 0, 'short_desc', 0]));
#line 10 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('attidsummary', $stash->get(['attachment', 0, 'id', 0])  . ': '  . $stash->get(['attachment', 0, 'description', 0]));
#line 11 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('flagtype_name', $stash->get('flag') ? $stash->get(['flag', 0, 'type', 0, 'name', 0]) : $stash->get(['old_flag', 0, 'type', 0, 'name', 0]));
#line 12 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('statuses', { '+' => 'granted', '-' => 'denied', 'X' => 'canceled', '?' => 'asked'  });
$output .=  "\n";
#line 15 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('to_identity', '');
#line 16 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('on_behalf_of', 0);
#line 17 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('action', $stash->get(['flag', 0, 'status', 0]) || 'X');
$output .=  "\n";
#line 35 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '?') {
#line 20 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('subject_status', 'requested');
#line 26 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get(['flag', 0, 'setter_id', 0]) eq $stash->get(['user', 0, 'id', 0])) {
#line 22 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('to_identity', $stash->get(['flag', 0, 'requestee', 0, 'identity', 0])  . ' for');
}
else {
#line 24 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('on_behalf_of', 1);
#line 25 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get(['flag', 0, 'requestee', 0])) {
#line 25 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('to_identity', ' to '  . $stash->get(['flag', 0, 'requestee', 0, 'identity', 0]));
}

}

}
else {
#line 33 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get('old_flag') && $stash->get(['old_flag', 0, 'status', 0]) eq '?') {
#line 29 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('to_identity', $stash->get(['old_flag', 0, 'setter', 0, 'identity', 0])  . '\'s request for');
#line 32 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get(['old_flag', 0, 'requestee', 0, 'defined', 0])) {
#line 31 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('requestee_identity', $stash->get(['old_flag', 0, 'requestee', 0, 'identity', 0])  . '\'s');
}

}

#line 34 "template/en/default/email/flagmail.txt.tmpl"
$stash->set('subject_status', $stash->get(['statuses', 0, $stash->get('action'), 0]));
}

$output .=  "\nFrom: ";
#line 36 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['Param', [ 'mailfrom' ]]);
$output .=  "\nTo: ";
#line 37 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('to');
$output .=  "\nSubject: ";
#line 38 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('flagtype_name');
$output .=  " ";
#line 38 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('subject_status');
$output .=  ": [";
#line 38 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " ";
#line 38 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
$output .=  "] ";
#line 38 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'short_desc', 0]);
#line 40 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get('attachment')) {
$output .=  " :\n  [Attachment ";
#line 40 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['attachment', 0, 'id', 0]);
$output .=  "] ";
#line 40 "template/en/default/email/flagmail.txt.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('clean_text')
              || $context->throw($context->error);

$output .=  $stash->get(['attachment', 0, 'description', 0]);
    
    &$_tt_filter($output);
};

}

$output .=  "\nDate: ";
#line 41 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('date');
$output .=  "\nX-Bugzilla-Type: request\n";
#line 43 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $context->include('email/header-common.txt.tmpl');
$output .=  "\n";
#line 44 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('threadingmarker');
$output .=  "\n\n";
#line 46 "template/en/default/email/flagmail.txt.tmpl"
# USE
$stash->set('wrap',
            $context->plugin('wrap'));
#line 57 "template/en/default/email/flagmail.txt.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('wrap', [ 80 ], 'bullet')
              || $context->throw($context->error);

#line 54 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get('on_behalf_of')) {
#line 50 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['user', 0, 'identity', 0]);
$output .=  " has reassigned ";
#line 50 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['flag', 0, 'setter', 0, 'identity', 0]);
$output .=  "'s request for ";
#line 50 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get('requestee_identity')) {
$output .=  " ";
#line 50 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('requestee_identity');
}

#line 50 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('flagtype_name');
#line 51 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('to_identity');
$output .=  ":";
}
else {
#line 53 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['user', 0, 'identity', 0]);
$output .=  " has ";
#line 53 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['statuses', 0, $stash->get('action'), 0]);
$output .=  " ";
#line 53 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('to_identity');
#line 53 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get('requestee_identity')) {
$output .=  " ";
#line 53 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('requestee_identity');
}

$output .=  " ";
#line 53 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('flagtype_name');
$output .=  ":";
}

$output .=  "\n";
#line 56 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  " ";
#line 56 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('bugidsummary');
    
    &$_tt_filter($output);
};

$output .=  "\n";
#line 58 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('urlbase');
$output .=  "show_bug.cgi?id=";
#line 58 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['bug', 0, 'bug_id', 0]);
#line 65 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get('attachment')) {
$output .=  "\n";
#line 63 "template/en/default/email/flagmail.txt.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('wrap', [ 80 ], 'bullet')
              || $context->throw($context->error);

$output .=  "\nAttachment ";
#line 62 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('attidsummary');
    
    &$_tt_filter($output);
};

$output .=  "\n";
#line 64 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get('urlbase');
$output .=  "attachment.cgi?id=";
#line 64 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['attachment', 0, 'id', 0]);
$output .=  "&action=edit";
}

$output .=  "\n";
#line 67 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['Hook', 0, 'process', [ 'after_summary' ]]);
#line 81 "template/en/default/email/flagmail.txt.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('wrap', [ 80 ], 'bullet')
              || $context->throw($context->error);

$output .=  "\n";
#line 79 "template/en/default/email/flagmail.txt.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('new_comments');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'comment'} = $_tt_value;
$output .=  "\n";
#line 77 "template/en/default/email/flagmail.txt.tmpl"
if ($stash->get(['comment', 0, 'count', 0])) {
$output .=  "\n--- Comment #";
#line 74 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['comment', 0, 'count', 0]);
$output .=  " from ";
#line 74 "template/en/default/email/flagmail.txt.tmpl"
$output .=  $stash->get(['comment', 0, 'author', 0, 'identity', 0]);
$output .=  " ---";
}
else {
$output .=  "\n--- Description ---";
}

$output .=  "\n";
#line 78 "template/en/default/email/flagmail.txt.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('strip_control_chars')
              || $context->throw($context->error);

$output .=  $stash->get(['comment', 0, 'body_full', [ { 'is_bugmail' => 1, 'wrap' => 1  } ]]);
    
    &$_tt_filter($output);
};
;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n";
    
    &$_tt_filter($output);
};

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
