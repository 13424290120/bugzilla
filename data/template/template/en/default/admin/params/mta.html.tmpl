use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'admin/params/mta.html.tmpl',
        'modtime' => '1483774492',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 9 "template/en/default/admin/params/mta.html.tmpl"
$stash->set('title', 'Email');
$stash->set('desc', 'How will outgoing mail be delivered?');
$output .=  "\n";
#line 1 "template/en/default/admin/params/mta.html.tmpl"
$stash->set('param_descs', { 'mail_delivery_method' => 'Defines how email is sent, or if it is sent at all.<br>
                           <ul>
                             <li>
                               \'SMTP\' means use the SMTP protocol to talk to a remote
                               mail server.
                             </li>
                             <li>
                               \'Sendmail\' means use the sendmail-compatible MTA
                               installed on the Bugzilla machine.
                               You need to install a third-party sendmail replacement if
                               you want to use sendmail on Windows.
                             </li>
                             <li>
                               \'Test\' is useful for debugging: all email is stored
                               in \'data/mailer.testfile\' instead of being sent.
                             </li>
                             <li>
                               \'None\' will completely disable email. Bugzilla continues
                               to act as though it is sending mail, but nothing is sent or
                               stored.
                             </li>
                           </ul>', 'mailfrom' => ("The email address of the " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " mail daemon.  Some email systems ")  . 'require this to be a valid email address.', 'use_mailer_queue' => 'In a large Bugzilla installation, updating'  . (" " . $stash->get(['terms', 0, 'bugs', 0]) . " can be very slow, because Bugzilla sends all")  . ' email at once. If you enable this parameter, Bugzilla will'  . ' queue all mail and then send it in the background. This requires'  . ' that you have installed certain Perl modules (as listed by'  . ' <kbd>checksetup.pl</kbd> for this feature), and that you are'  . ' running the <code>jobqueue.pl</code> daemon (otherwise your mail'  . ' won\'t get sent). This affects all mail sent by Bugzilla,'  . (" not just " . $stash->get(['terms', 0, 'bug', 0]) . " updates."), 'smtpserver' => 'The SMTP server address with optional port number (if using SMTP'  . ' for mail delivery). eg: example.com or example.com:1234', 'smtp_username' => 'The username to pass to the SMTP server for SMTP authentication. '  . 'Leave this field empty if your SMTP server doesn\'t require authentication.', 'smtp_password' => 'The password to pass to the SMTP server for SMTP authentication. '  . 'This field has no effect if the smtp_username parameter is left empty.', 'smtp_ssl' => 'Enable SSL support for SMTP.', 'smtp_debug' => 'If enabled, this will print detailed information to your'  . ' web server\'s error log about the communication between'  . ' Bugzilla and your SMTP server. You can use this to'  . ' troubleshoot email problems.', 'whinedays' => ("The number of days that we'll let a " . $stash->get(['terms', 0, 'bug', 0]) . " sit untouched in a CONFIRMED ")  . 'state before our cronjob will whine at the owner.<br> '  . 'Set to 0 to disable whining.', 'globalwatchers' => 'A comma-separated list of users who should receive a '  . 'copy of every notification mail the system sends.'  });
$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
