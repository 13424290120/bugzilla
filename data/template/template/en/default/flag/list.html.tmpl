use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'flag/list.html.tmpl',
        'modtime' => '1483774492',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n";
#line 95 "template/en/default/flag/list.html.tmpl"
if ($stash->get(['user', 0, 'id', 0]) && (! $stash->get('bug') || $stash->get(['bug', 0, 'check_can_change_field', [ 'flagtypes.name', 0, 1 ]]))) {
$output .=  "\n\n";
$output .=  "\n";
#line 19 "template/en/default/flag/list.html.tmpl"
$stash->set('flag_table_id', 'flags', 1);
$output .=  "\n\n<script src=\"";
#line 21 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('mtime')
              || $context->throw($context->error);

$output .=  'js/flag.js';
    
    &$_tt_filter($output);
};

$output .=  "\" type=\"text/javascript\"></script>\n\n<table id=\"";
#line 23 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('flag_table_id');
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 34 "template/en/default/flag/list.html.tmpl"
if (!($stash->get('flag_no_header'))) {
$output .=  "\n    <tr>\n      <th colspan=\"3\">Flags:</th>";
#line 29 "template/en/default/flag/list.html.tmpl"
if ($stash->get('any_flags_requesteeble')) {
$output .=  "\n        <th>Requestee:</th>";
}

#line 32 "template/en/default/flag/list.html.tmpl"
if ($stash->get('edit_multiple_bugs')) {
$output .=  "\n        <th>&nbsp;</th>";
}

$output .=  "\n    </tr>";
}

$output .=  "\n\n  ";
#line 51 "template/en/default/flag/list.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('flag_types');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'type'} = $_tt_value;

#line 42 "template/en/default/flag/list.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['type', 0, 'flags', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR2:   while (! $_tt_error) {
            $stash->{'flag'} = $_tt_value;
#line 41 "template/en/default/flag/list.html.tmpl"
$output .=  $context->process('flag_row', { 'flag' => $stash->get('flag'), 'type' => $stash->get('type') });;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

#line 44 "template/en/default/flag/list.html.tmpl"
$stash->set('flag', '');
#line 45 "template/en/default/flag/list.html.tmpl"
if ($stash->get('read_only_flags')) {
($_tt_value, $_tt_error) = $_tt_list->get_next();
next FOR1;

}

$output .=  "\n";

#line 50 "template/en/default/flag/list.html.tmpl"
if ((! $stash->get(['type', 0, 'flags', 0]) || $stash->get(['type', 0, 'flags', 0, 'size', 0]) eq 0) && $stash->get(['type', 0, 'is_active', 0])) {
#line 49 "template/en/default/flag/list.html.tmpl"
$output .=  $context->process('flag_row', { 'type' => $stash->get('type') });
}
;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n";
#line 68 "template/en/default/flag/list.html.tmpl"
if (! $stash->get('read_only_flags')) {
$output .=  "\n    ";
#line 67 "template/en/default/flag/list.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('flag_types');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'type'} = $_tt_value;
#line 56 "template/en/default/flag/list.html.tmpl"
if (!($stash->get(['type', 0, 'flags', 0]) && $stash->get(['type', 0, 'flags', 0, 'size', 0]) > 0 && $stash->get(['type', 0, 'is_multiplicable', 0]) && $stash->get(['type', 0, 'is_active', 0]))) {
($_tt_value, $_tt_error) = $_tt_list->get_next();
next FOR1;

}

#line 65 "template/en/default/flag/list.html.tmpl"
if (! $stash->get('separator_displayed')) {
$output .=  "\n        <tbody class=\"bz_flag_type\">";
#line 59 "template/en/default/flag/list.html.tmpl"
$stash->set('sep_length', 3 + ($stash->get('any_flags_requesteeble') ? 1 : 0) + ($stash->get('edit_multiple_bugs') ? 1 : 0));
$output .=  "\n          <tr>\n            <td colspan=\"";
#line 61 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('sep_length');
    
    &$_tt_filter($output);
};

$output .=  "\"><hr></td>\n          </tr>\n        </tbody>";
#line 64 "template/en/default/flag/list.html.tmpl"
$stash->set('separator_displayed', 1);
}

#line 66 "template/en/default/flag/list.html.tmpl"
$output .=  $context->process('flag_row', { 'type' => $stash->get('type'), 'addl_text' => 'addl.' });;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

}

$output .=  "\n</table>\n";
}
else {
$output .=  "\n  ";
#line 73 "template/en/default/flag/list.html.tmpl"
$stash->set('header_displayed', 0);
#line 94 "template/en/default/flag/list.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('flag_types');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'type'} = $_tt_value;
#line 93 "template/en/default/flag/list.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['type', 0, 'flags', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR2:   while (! $_tt_error) {
            $stash->{'flag'} = $_tt_value;
#line 79 "template/en/default/flag/list.html.tmpl"
if (! $stash->get('flag_no_header') && ! $stash->get('header_displayed')) {
$output .=  "\n        <p><b>Flags:</b></p>";
#line 78 "template/en/default/flag/list.html.tmpl"
$stash->set('header_displayed', 1);
}

#line 84 "template/en/default/flag/list.html.tmpl"
if ($stash->get(['flag', 0, 'setter', 0, 'name', 0])) {
$output .=  "\n        <span title=\"";
#line 81 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['flag', 0, 'setter', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 81 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['flag', 0, 'setter', 0, 'nick', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</span>:";
}
else {
#line 83 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['flag', 0, 'setter', 0, 'nick', 0]);
    
    &$_tt_filter($output);
};

$output .=  ":";
}

$output .=  "\n      <span class=\"nowrap\">";
#line 85 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['type', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

#line 85 "template/en/default/flag/list.html.tmpl"
$output .=  $stash->get(['flag', 0, 'status', 0]);
$output .=  "</span>";
#line 92 "template/en/default/flag/list.html.tmpl"
if ($stash->get(['flag', 0, 'requestee', 0])) {
#line 91 "template/en/default/flag/list.html.tmpl"
if ($stash->get(['flag', 0, 'requestee', 0, 'name', 0])) {
$output .=  "\n          (<span title=\"";
#line 88 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['flag', 0, 'requestee', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 88 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['flag', 0, 'requestee', 0, 'nick', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</span>)";
}
else {
$output .=  "\n          (";
#line 90 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['flag', 0, 'requestee', 0, 'nick', 0]);
    
    &$_tt_filter($output);
};

$output .=  ")";
}

}

$output .=  "<br>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};
;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

}

$output .=  "\n\n";
$output .=  "\n";

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {
        'flag_row' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 100 "template/en/default/flag/list.html.tmpl"
if (! $stash->get('flag') && ! (($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) || $stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]))) {
$context->throw('return', '', \$output);
}

#line 1 "template/en/default/flag/list.html.tmpl"
$stash->set('fid', $stash->get('flag') ? ("flag-" . $stash->get(['flag', 0, 'id', 0])) : ("flag_type-" . $stash->get(['type', 0, 'id', 0])));
#line 102 "template/en/default/flag/list.html.tmpl"
$stash->set('can_edit_flag', (! $stash->get('read_only_flags') || ($stash->get('flag') && ($stash->get(['flag', 0, 'setter_id', 0]) eq $stash->get(['user', 0, 'id', 0]) || ($stash->get(['flag', 0, 'requestee_id', 0]) && $stash->get(['flag', 0, 'requestee_id', 0]) eq $stash->get(['user', 0, 'id', 0]))))) ? 1 : 0);
$output .=  "\n  <tbody";
#line 103 "template/en/default/flag/list.html.tmpl"
if (! $stash->get('flag')) {
$output .=  ' class="bz_flag_type"';
}

$output .=  ">\n    <tr>\n      <td>";
#line 110 "template/en/default/flag/list.html.tmpl"
if ($stash->get('flag')) {
$output .=  "\n          <span title=\"";
#line 107 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['flag', 0, 'setter', 0, 'identity', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 107 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['flag', 0, 'setter', 0, 'nick', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</span>:";
}
else {
#line 109 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('addl_text');
    
    &$_tt_filter($output);
};

}

$output .=  "\n      </td>\n      <td class=\"nowrap\">\n        <label title=\"";
#line 113 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['type', 0, 'description', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\" for=\"";
#line 113 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('fid');
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 114 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['type', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</label>\n      </td>\n      <td>\n        <input type=\"hidden\" id=\"";
#line 117 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('fid');
    
    &$_tt_filter($output);
};

$output .=  "_dirty\">\n        <select id=\"";
#line 118 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('fid');
    
    &$_tt_filter($output);
};

$output .=  "\" name=\"";
#line 118 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('fid');
    
    &$_tt_filter($output);
};

$output .=  "\"\n                title=\"";
#line 119 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['type', 0, 'description', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"\n                onchange=\"toggleRequesteeField(this);\"\n                class=\"flag_select flag_type-";
#line 121 "template/en/default/flag/list.html.tmpl"
$output .=  $stash->get(['type', 0, 'id', 0]);
$output .=  "\"";
#line 122 "template/en/default/flag/list.html.tmpl"
if (! $stash->get('can_edit_flag')) {
$output .=  " disabled=\"disabled\"";
}

$output .=  ">\n        ";
#line 126 "template/en/default/flag/list.html.tmpl"
if ($stash->get('edit_multiple_bugs') && $stash->get('dontchange')) {
$output .=  "\n          <option value=\"";
#line 125 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('dontchange');
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 125 "template/en/default/flag/list.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('dontchange');
    
    &$_tt_filter($output);
};

$output .=  "</option>";
}

#line 129 "template/en/default/flag/list.html.tmpl"
if (! $stash->get('flag') || ($stash->get('can_edit_flag') && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) || $stash->get(['flag', 0, 'setter_id', 0]) eq $stash->get(['user', 0, 'id', 0])) {
$output .=  "\n          <option value=\"X\" label=\"X\"></option>";
}

#line 142 "template/en/default/flag/list.html.tmpl"
if ($stash->get(['type', 0, 'is_active', 0]) && $stash->get('can_edit_flag')) {
#line 133 "template/en/default/flag/list.html.tmpl"
if (($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) || ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '?')) {
$output .=  "\n            <option value=\"?\" ";
#line 132 "template/en/default/flag/list.html.tmpl"
if ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '?') {
$output .=  'selected';
}

$output .=  ">?</option>";
}

#line 136 "template/en/default/flag/list.html.tmpl"
if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]) || ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '+')) {
$output .=  "\n            <option value=\"+\" ";
#line 135 "template/en/default/flag/list.html.tmpl"
if ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '+') {
$output .=  'selected';
}

$output .=  ">+</option>";
}

#line 139 "template/en/default/flag/list.html.tmpl"
if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]) || ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '-')) {
$output .=  "\n            <option value=\"-\" ";
#line 138 "template/en/default/flag/list.html.tmpl"
if ($stash->get('flag') && $stash->get(['flag', 0, 'status', 0]) eq '-') {
$output .=  'selected';
}

$output .=  ">-</option>";
}

}
else {
$output .=  "\n          <option value=\"";
#line 141 "template/en/default/flag/list.html.tmpl"
$output .=  $stash->get(['flag', 0, 'status', 0]);
$output .=  "\" selected=\"selected\">";
#line 141 "template/en/default/flag/list.html.tmpl"
$output .=  $stash->get(['flag', 0, 'status', 0]);
$output .=  "</option>";
}

$output .=  "\n        </select>\n      </td>";
#line 175 "template/en/default/flag/list.html.tmpl"
if ($stash->get('any_flags_requesteeble')) {
$output .=  "\n        <td class=\"bz_flags\">";
#line 173 "template/en/default/flag/list.html.tmpl"
if (($stash->get(['type', 0, 'is_active', 0]) && $stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0])) || ($stash->get('flag') && $stash->get(['flag', 0, 'requestee', 0]))) {
#line 148 "template/en/default/flag/list.html.tmpl"
$stash->set('grant_list', [ ]);
#line 158 "template/en/default/flag/list.html.tmpl"
if ($stash->get(['Param', [ 'usemenuforusers' ]])) {
#line 157 "template/en/default/flag/list.html.tmpl"
if (! $stash->get('can_edit_flag') || ($stash->get('flag') && ! ($stash->get(['type', 0, 'is_active', 0]) && $stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0])))) {
$output .=  "\n                  ";
#line 154 "template/en/default/flag/list.html.tmpl"
$stash->set('grant_list', [ $stash->get(['flag', 0, 'requestee', 0]) ]);
}
else {
#line 156 "template/en/default/flag/list.html.tmpl"
$stash->set('grant_list', $stash->get(['type', 0, 'grant_list', 0]));
}

}

#line 1 "template/en/default/flag/list.html.tmpl"
$stash->set('flag_name', $stash->get('flag') ? ("requestee-" . $stash->get(['flag', 0, 'id', 0])) : ("requestee_type-" . $stash->get(['type', 0, 'id', 0])));
#line 160 "template/en/default/flag/list.html.tmpl"
$stash->set('flag_requestee', ($stash->get('flag') && $stash->get(['flag', 0, 'requestee', 0])) ? $stash->get(['flag', 0, 'requestee', 0, 'login', 0]) : '');
#line 161 "template/en/default/flag/list.html.tmpl"
$stash->set('flag_multiple', $stash->get('flag') ? 0 : $stash->get(['type', 0, 'is_multiplicable', 0]) * 3);
#line 162 "template/en/default/flag/list.html.tmpl"
$stash->set('flag_empty_ok', $stash->get('flag') ? 1 : ! $stash->get(['type', 0, 'is_multiplicable', 0]));
#line 163 "template/en/default/flag/list.html.tmpl"
$output .=  $context->include('global/userselect.html.tmpl', { 'name' => $stash->get('flag_name'), 'id' => $stash->get('flag_name'), 'value' => $stash->get('flag_requestee'), 'multiple' => $stash->get('flag_multiple'), 'emptyok' => $stash->get('flag_empty_ok'), 'classes' => [ 'requestee' ], 'custom_userlist' => $stash->get('grant_list'), 'disabled' => ! $stash->get('can_edit_flag') });
}

$output .=  "\n        </td>";
}

#line 188 "template/en/default/flag/list.html.tmpl"
if ($stash->get('edit_multiple_bugs')) {
$output .=  "\n        <td>";
#line 186 "template/en/default/flag/list.html.tmpl"
if ($stash->get(['type', 0, 'is_multiplicable', 0])) {
$output .=  "\n          <input type=\"checkbox\" name=\"flags_add-";
#line 179 "template/en/default/flag/list.html.tmpl"
$output .=  $stash->get(['type', 0, 'id', 0]);
$output .=  "\"\n                 id=\"flags_add-";
#line 180 "template/en/default/flag/list.html.tmpl"
$output .=  $stash->get(['type', 0, 'id', 0]);
$output .=  "\" value=\"1\">\n          <label for=\"flags_add-";
#line 181 "template/en/default/flag/list.html.tmpl"
$output .=  $stash->get(['type', 0, 'id', 0]);
$output .=  "\"\n                 title=\"If ticked, always create a new flag. Leaving it unchecked will\n                        update existing flag(s) and add a new flag if it does not exist\">\n            Always add\n          </label>";
}

$output .=  "\n        </td>";
}

$output .=  "\n    </tr>\n  </tbody>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    },
});
