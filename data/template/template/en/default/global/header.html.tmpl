use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1488093533',
        'name' => 'global/header.html.tmpl',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n";
$output .=  "\n";
#line 28 "template/en/default/global/header.html.tmpl"
if ($stash->get('message')) {
#line 27 "template/en/default/global/header.html.tmpl"
$output .=  $context->process('global/messages.html.tmpl');
}

$output .=  "\n";
#line 30 "template/en/default/global/header.html.tmpl"
$stash->set('subheader', '', 1);
$stash->set('header_addl_info', '', 1);
$stash->set('onload', '', 1);
$stash->set('style_urls', [ ], 1);
$stash->set('javascript_urls', [ ], 1);
$stash->set('yui', [ ], 1);
$stash->set('generate_api_token', 0, 1);
$stash->set('favicon_url', 'images/favicon.ico', 1);
$output .=  "\n";
#line 41 "template/en/default/global/header.html.tmpl"
$stash->set('yui_css', { 'autocomplete' => 1, 'calendar' => 1, 'datatable' => 1, 'button' => 1  });
$output .=  "\n\n";
#line 52 "template/en/default/global/header.html.tmpl"
$stash->set('yui_deps', { 'autocomplete' => [ 'json', 'connection', 'datasource' ], 'datatable' => [ 'json', 'connection', 'datasource', 'element' ]  });
$output .=  "\n\n";
#line 60 "template/en/default/global/header.html.tmpl"
$stash->set('yui_templates', { 'datatable' => [ 'global/value-descs.js.tmpl' ]  });
$output .=  "\n\n";
#line 67 "template/en/default/global/header.html.tmpl"
$stash->set('starting_js_urls', [ 'js/yui/yahoo-dom-event/yahoo-dom-event.js', 'js/yui/cookie/cookie-min.js', 'js/jquery-3.1.1.min.js', 'js/jquery-ui.min.js' ]);
$output .=  "\n\n\n";
#line 83 "template/en/default/global/header.html.tmpl"
if (! $stash->get(['header', 0, 'defined', 0])) {
#line 83 "template/en/default/global/header.html.tmpl"
$stash->set('header', $stash->get('title'));
}

$output .=  "\n\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n";
#line 89 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get(['Hook', 0, 'process', [ 'start' ]]);
$output .=  "\n    <title>";
#line 90 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get('title');
$output .=  "</title>\n";
#line 94 "template/en/default/global/header.html.tmpl"
if ($stash->get(['Param', [ 'utf8' ]])) {
$output .=  "\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">";
}

$output .=  "\n";
#line 96 "template/en/default/global/header.html.tmpl"
$stash->set('yui', $stash->get(['yui_resolve_deps', [ $stash->get('yui'), $stash->get('yui_deps') ]]));
$output .=  "\n";
#line 98 "template/en/default/global/header.html.tmpl"
$stash->set('css_sets', $stash->get(['css_files', [ $stash->get('style_urls'), $stash->get('yui'), $stash->get('yui_css') ]]));
#line 108 "template/en/default/global/header.html.tmpl"
if ('1') {
#line 100 "template/en/default/global/header.html.tmpl"
$output .=  $context->process('format_css_link', { 'asset_url' => $stash->get(['css_sets', 0, 'unified_standard_skin', 0]) });
}
else {
#line 104 "template/en/default/global/header.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['css_sets', 0, 'standard', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'asset_url'} = $_tt_value;
#line 103 "template/en/default/global/header.html.tmpl"
$output .=  $context->process('format_css_link');;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

#line 107 "template/en/default/global/header.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['css_sets', 0, 'skin', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'asset_url'} = $_tt_value;
#line 106 "template/en/default/global/header.html.tmpl"
$output .=  $context->process('format_css_link');;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

}

$output .=  "\n";
#line 114 "template/en/default/global/header.html.tmpl"
if ($stash->get('style')) {
$output .=  "\n      <style type=\"text/css\">";
#line 112 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get('style');
$output .=  "\n      </style>";
}

$output .=  "\n";
#line 124 "template/en/default/global/header.html.tmpl"
if ($stash->get(['css_sets', 0, 'unified_custom', 0])) {
#line 123 "template/en/default/global/header.html.tmpl"
if ('1') {
#line 118 "template/en/default/global/header.html.tmpl"
$output .=  $context->process('format_css_link', { 'asset_url' => $stash->get(['css_sets', 0, 'unified_custom', 0]) });
}
else {
#line 122 "template/en/default/global/header.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['css_sets', 0, 'custom', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'asset_url'} = $_tt_value;
#line 121 "template/en/default/global/header.html.tmpl"
$output .=  $context->process('format_css_link');;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

}

}

$output .=  "\n\n    ";
#line 129 "template/en/default/global/header.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('yui');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'yui_name'} = $_tt_value;
#line 1 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get(['starting_js_urls', 0, 'push', [ ("js/yui/" . $stash->get('yui_name') . "/" . $stash->get('yui_name') . "-min.js") ]]);;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

#line 130 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get(['starting_js_urls', 0, 'push', [ 'js/global.js' ]]);
$output .=  "\n";
#line 134 "template/en/default/global/header.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['concatenate_js', [ $stash->get('starting_js_urls') ]]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'asset_url'} = $_tt_value;
#line 133 "template/en/default/global/header.html.tmpl"
$output .=  $context->process('format_js_link');;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n    \n  \n\n    <!--\n        YAHOO.namespace('bugzilla');\n        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {\n               if ( (\"onpagehide\" in window || YAHOO.env.ua.gecko) && sType === \"unload\") { sType = \"pagehide\"; };\n               var capture = ((sType == \"focusin\" || sType == \"focusout\") && !YAHOO.env.ua.ie) ? true : false;\n               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);\n         };\n        if ( \"onpagehide\" in window || YAHOO.env.ua.gecko) {\n            YAHOO.util.Event._simpleRemove(window, \"unload\", \n                                           YAHOO.util.Event._unload);\n        }\n        ";
$output .=  "\n        function unhide_language_selector() { \n            YAHOO.util.Dom.removeClass(\n                'lang_links_container', 'bz_default_hidden'\n            ); \n        } \n        YAHOO.util.Event.onDOMReady(unhide_language_selector);\n\n        ";
$output .=  "\n        var BUGZILLA = {\n            param: {\n                cookiepath: '";
#line 167 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['Param', [ 'cookiepath' ]]);
    
    &$_tt_filter($output);
};

$output .=  "',\n                maxusermatches: ";
#line 168 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get(['Param', [ 'maxusermatches' ]]);
    
    &$_tt_filter($output);
};

$output .=  "\n            },\n            constant: {\n                COMMENT_COLS: ";
#line 171 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  '80';
    
    &$_tt_filter($output);
};

$output .=  "\n            },\n            string: {\n                ";
$output .=  "\n\n                attach_desc_required:\n                    \"You must enter a Description for this attachment.\",\n                component_required:\n                    \"You must select a Component for this ";
#line 179 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ".\",\n                description_required:\n                    \"You must enter a Description for this ";
#line 181 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ".\",\n                short_desc_required:\n                    \"You must enter a Summary for this ";
#line 183 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ".\",\n                version_required:\n                    \"You must select a Version for this ";
#line 185 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  ".\"\n            }";
#line 189 "template/en/default/global/header.html.tmpl"
if ($stash->get('generate_api_token')) {
$output .=  "\n              , api_token: '";
#line 188 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  $stash->get('get_api_token');
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

$output .=  "'";
}

$output .=  "\n        };\n";
#line 196 "template/en/default/global/header.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('yui');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'yui_name'} = $_tt_value;
#line 195 "template/en/default/global/header.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['yui_templates', 0, $stash->get('yui_name'), 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR2:   while (! $_tt_error) {
            $stash->{'yui_template'} = $_tt_value;
#line 194 "template/en/default/global/header.html.tmpl"
$output .=  $context->include($stash->get('yui_template'));;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};
;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

#line 199 "template/en/default/global/header.html.tmpl"
if ($stash->get('javascript')) {
#line 198 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get('javascript');
}

$output .=  "\n    // -->\n    </script>\n";
#line 205 "template/en/default/global/header.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['concatenate_js', [ $stash->get('javascript_urls') ]]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'asset_url'} = $_tt_value;
#line 204 "template/en/default/global/header.html.tmpl"
$output .=  $context->process('format_js_link');;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n    ";
#line 212 "template/en/default/global/header.html.tmpl"
if ($stash->get('atomlink')) {
$output .=  "\n       <link rel=\"alternate\" \n             type=\"application/atom+xml\" title=\"Atom feed\" \n             href=\"";
#line 211 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('atomlink');
    
    &$_tt_filter($output);
};

$output .=  "\">";
}

$output .=  "\n\n    ";
$output .=  "\n    <link rel=\"search\" type=\"application/opensearchdescription+xml\"\n                       title=\"";
#line 216 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
$output .=  "\" href=\"./search_plugin.cgi\">\n    <link rel=\"shortcut icon\" href=\"";
#line 217 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('favicon_url');
    
    &$_tt_filter($output);
};

$output .=  "\">";
#line 218 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get(['Hook', 0, 'process', [ 'additional_header' ]]);
$output .=  "\n  </head>\n\n  <body ";
#line 221 "template/en/default/global/header.html.tmpl"
if ($stash->get('onload')) {
$output .=  " onload=\"";
#line 221 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get('onload');
$output .=  "\"";
}

$output .=  "\n        class=\"";
#line 222 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('css_class_quote')
              || $context->throw($context->error);

$output .=  $stash->get(['urlbase', 0, 'replace', [ '^https?://', '' ], 'replace', [ '/$', '' ], 'replace', [ '[-~@:/.]+', '-' ]]);
    
    &$_tt_filter($output);
};

#line 225 "template/en/default/global/header.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('bodyclasses');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'class'} = $_tt_value;
$output .=  "\n                 ";
#line 224 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('css_class_quote')
              || $context->throw($context->error);

$output .=  $stash->get('class');
    
    &$_tt_filter($output);
};
;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  " yui-skin-sam\">\n\n  <div id=\"header\">";
#line 228 "template/en/default/global/header.html.tmpl"
$output .=  $context->include('global/banner.html.tmpl');
$output .=  "\n\n    <div id=\"titles\">\n      <span id=\"title\">";
#line 231 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
#line 1 "template/en/default/global/header.html.tmpl"
if ($stash->get('header')) {
$output .=  (" &ndash; " . $stash->get('header'));
}

$output .=  "</span>\n";
#line 235 "template/en/default/global/header.html.tmpl"
if ($stash->get('subheader')) {
$output .=  "\n        <span id=\"subtitle\" class=\"subheader\">";
#line 234 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get('subheader');
$output .=  "</span>";
}

$output .=  "\n";
#line 239 "template/en/default/global/header.html.tmpl"
if ($stash->get('header_addl_info')) {
$output .=  "\n        <span id=\"information\" class=\"header_addl_info\">";
#line 238 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get('header_addl_info');
$output .=  "</span>";
}

$output .=  "\n    </div>\n";
#line 242 "template/en/default/global/header.html.tmpl"
# USE
$stash->set('Bugzilla',
            $context->plugin('Bugzilla'));
#line 259 "template/en/default/global/header.html.tmpl"
if ($stash->get(['Bugzilla', 0, 'languages', 0, 'size', 0]) > 1) {
$output .=  "\n      <div id=\"lang_links_container\" class=\"bz_default_hidden\">\n        <ul class=\"links\">";
#line 256 "template/en/default/global/header.html.tmpl"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['Bugzilla', 0, 'languages', 0, 'sort', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'lang'} = $_tt_value;
$output .=  "\n            <li>";
#line 248 "template/en/default/global/header.html.tmpl"
if (! $stash->get(['loop', 0, 'first', 0])) {
$output .=  "<span class=\"separator\"> | </span>";
}

#line 254 "template/en/default/global/header.html.tmpl"
if ($stash->get('lang') eq $stash->get('current_language')) {
$output .=  "\n                <span class=\"lang_current\">";
#line 250 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('upper')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('lang');
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

$output .=  "</span>";
}
else {
$output .=  "\n                <a href=\"#\" onclick=\"set_language('";
#line 252 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('none')
              || $context->throw($context->error);

$output .=  $stash->get('lang');
    
    &$_tt_filter($output);
};

$output .=  "');\">";
#line 253 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('upper')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('lang');
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

$output .=  "</a>";
}

$output .=  "\n            </li>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n        </ul>\n      </div>";
}

$output .=  "\n\n    <div id=\"common_links\">";
#line 262 "template/en/default/global/header.html.tmpl"
$output .=  $context->process('global/common-links.html.tmpl', { 'qs_suffix' => '_top' });
$output .=  "\n    </div>\n  </div>\n\n  <div id=\"bugzilla-body\">";
#line 269 "template/en/default/global/header.html.tmpl"
if ($stash->get(['Param', [ 'announcehtml' ]])) {
#line 268 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('none')
              || $context->throw($context->error);

$output .=  $stash->get(['Param', [ 'announcehtml' ]]);
    
    &$_tt_filter($output);
};

}

$output .=  "\n";
#line 273 "template/en/default/global/header.html.tmpl"
if ($stash->get('message')) {
$output .=  "\n      <div id=\"message\">";
#line 272 "template/en/default/global/header.html.tmpl"
$output .=  $stash->get('message');
$output .=  "</div>";
}

$output .=  "\n";

$output .=  "\n";

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {
        'format_js_link' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <script type=\"text/javascript\" src=\"";
#line 280 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('mtime')
              || $context->throw($context->error);

$output .=  $stash->get('asset_url');
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

$output .=  "\"></script>";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
        'format_css_link' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n  <link href=\"";
#line 276 "template/en/default/global/header.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('asset_url');
    
    &$_tt_filter($output);
};

$output .=  "\" rel=\"stylesheet\" type=\"text/css\">";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    },
});
