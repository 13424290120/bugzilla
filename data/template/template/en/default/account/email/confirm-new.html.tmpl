use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1483774492',
        'name' => 'account/email/confirm-new.html.tmpl',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n";
$output .=  "\n";
#line 15 "template/en/default/account/email/confirm-new.html.tmpl"

# CAPTURE
$stash->set('title', do {
    my $output = '';
$output .=  "Create a new user account for '";
#line 15 "template/en/default/account/email/confirm-new.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('email');
    
    &$_tt_filter($output);
};

$output .=  "'";
    $output;
});

#line 16 "template/en/default/account/email/confirm-new.html.tmpl"
$output .=  $context->process('global/header.html.tmpl', { 'title' => $stash->get('title') });
$output .=  "\n";
#line 20 "template/en/default/account/email/confirm-new.html.tmpl"
$stash->set('password_complexity', $stash->get(['Param', [ 'password_complexity' ]]));
$output .=  "\n\n<p>\n  To create your account, you must enter a password in the form below.\n  Your email address and Real Name (if provided) will be shown with\n  changes you make.\n</p>\n\n<form id=\"confirm_account_form\" method=\"post\" action=\"token.cgi\">\n  <input type=\"hidden\" name=\"t\" value=\"";
#line 29 "template/en/default/account/email/confirm-new.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('token');
    
    &$_tt_filter($output);
};

$output .=  "\">\n  <input type=\"hidden\" name=\"a\" value=\"confirm_new_account\">\n  <table>\n    <tr>\n      <th>Email Address:</th>\n      <td>";
#line 34 "template/en/default/account/email/confirm-new.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('email');
    
    &$_tt_filter($output);
};

$output .=  "</td>\n    </tr>\n    <tr>\n      <th><small><i>(OPTIONAL)</i></small> <label for=\"realname\">Real Name</label>:</th>\n      <td><input id=\"realname\" name=\"realname\" autofocus></td>\n    </tr>\n    <tr>\n      <th><label for=\"passwd1\">Type your password</label>:</th>\n      <td>\n        <input type=\"password\" id=\"passwd1\" name=\"passwd1\" value=\"\" required>\n        (Password should be a minimum of ";
#line 44 "template/en/default/account/email/confirm-new.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('none')
              || $context->throw($context->error);

$output .=  '6';
    
    &$_tt_filter($output);
};

$output .=  " characters long";
#line 51 "template/en/default/account/email/confirm-new.html.tmpl"
if ($stash->get('password_complexity') eq 'mixed_letters') {
$output .=  "\n          and must contain at least one UPPER and one lowercase letter";
}
elsif ($stash->get('password_complexity') eq 'letters_numbers') {
$output .=  "\n          and must contain at least one UPPER and one lowercase letter and a number";
}
elsif ($stash->get('password_complexity') eq 'letters_numbers_specialchars') {
$output .=  " \n          and must contain at least one letter, a number and a special character";
}

$output .=  ".)\n      </td>\n    </tr>\n    <tr>\n      <th><label for=\"passwd2\">Confirm your password</label>:</th>\n      <td><input type=\"password\" id=\"passwd2\" name=\"passwd2\" value=\"\" required></td>\n    </tr>\n    <tr>\n      <th>&nbsp;</th>\n      <td><input type=\"submit\" id=\"confirm\" value=\"Create\"></td>\n    </tr>\n  </table>\n</form>\n\n<p>\n  This account will not be created if this form is not completed by\n  <b>";
#line 68 "template/en/default/account/email/confirm-new.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('time', [ '%B %e, %Y at %H:%M %Z' ])
              || $context->throw($context->error);

$output .=  $stash->get('expiration_ts');
    
    &$_tt_filter($output);
};

$output .=  "</b>.\n</p>\n\n<p>\n  If you do not wish to create an account with this email click the\n  cancel account button below and your details will be forgotten.\n</p>\n\n<form id=\"cancel_account_form\" method=\"post\" action=\"token.cgi\">\n  <input type=\"hidden\" name=\"t\" value=\"";
#line 77 "template/en/default/account/email/confirm-new.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('token');
    
    &$_tt_filter($output);
};

$output .=  "\">\n  <input type=\"hidden\" name=\"a\" value=\"cancel_new_account\">\n  <input type=\"submit\" id=\"confirm\" value=\"Cancel Account\">\n</form>\n";
#line 82 "template/en/default/account/email/confirm-new.html.tmpl"
$output .=  $context->process('global/footer.html.tmpl');
$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
