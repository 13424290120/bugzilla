use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.26
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'admin/users/userdata.html.tmpl',
        'modtime' => '1483774492',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n";
$output .=  "\n\n<script type=\"text/javascript\">\n  var disable_mail_manually_set = ";
#line 17 "template/en/default/admin/users/userdata.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('js')
              || $context->throw($context->error);

$output .=  ($stash->get(['otheruser', 0, 'email_disabled', 0]) ? 1 : 0);
    
    &$_tt_filter($output);
};

$output .=  ";\n</script>\n\n<tr>\n  <th><label for=\"login\">Login name:</label></th>\n  <td>";
#line 36 "template/en/default/admin/users/userdata.html.tmpl"
if ($stash->get('editusers')) {
$output .=  "\n      <input size=\"64\" maxlength=\"255\" id=\"login\" name=\"login\"\n             value=\"";
#line 25 "template/en/default/admin/users/userdata.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['otheruser', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"";
#line 26 "template/en/default/admin/users/userdata.html.tmpl"
if (!($stash->get('editform'))) {
$output .=  ' autofocus';
}

$output .=  " required>";
#line 33 "template/en/default/admin/users/userdata.html.tmpl"
if ($stash->get('editform')) {
#line 32 "template/en/default/admin/users/userdata.html.tmpl"
if (! $stash->get(['otheruser', 0, 'in_group', [ 'bz_sudo_protect' ]])) {
$output .=  "\n          <br>\n          <a href=\"relogin.cgi?action=prepare-sudo&amp;target_login=";
#line 31 "template/en/default/admin/users/userdata.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('uri')
              || $context->throw($context->error);

$output .=  $stash->get(['otheruser', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">Impersonate this user</a>";
}

}

}
else {
#line 35 "template/en/default/admin/users/userdata.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['otheruser', 0, 'login', 0]);
    
    &$_tt_filter($output);
};

}

$output .=  "\n  </td>\n</tr>";
#line 51 "template/en/default/admin/users/userdata.html.tmpl"
if ($stash->get(['default_authorizer', 0, 'extern_id_used', 0])) {
$output .=  "\n  <tr>\n    <th><label for=\"extern_id\">External Login ID:</label></th>\n    <td>";
#line 48 "template/en/default/admin/users/userdata.html.tmpl"
if ($stash->get('editusers')) {
$output .=  "\n        <input size=\"64\" maxlength=\"64\" name=\"extern_id\"\n               id=\"extern_id\" value=\"";
#line 45 "template/en/default/admin/users/userdata.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['otheruser', 0, 'extern_id', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
}
else {
#line 47 "template/en/default/admin/users/userdata.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['otheruser', 0, 'extern_id', 0]);
    
    &$_tt_filter($output);
};

}

$output .=  "\n    </td>\n  </tr>";
}

$output .=  "\n<tr>\n  <th><label for=\"name\">Real name:</label></th>\n  <td>";
#line 60 "template/en/default/admin/users/userdata.html.tmpl"
if ($stash->get('editusers')) {
$output .=  "\n      <input size=\"64\" maxlength=\"255\" id=\"name\" name=\"name\"\n             autocomplete=\"off\" value=\"";
#line 57 "template/en/default/admin/users/userdata.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['otheruser', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">";
}
else {
#line 59 "template/en/default/admin/users/userdata.html.tmpl"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['otheruser', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

}

$output .=  "\n  </td>\n</tr>\n\n";
#line 68 "template/en/default/admin/users/userdata.html.tmpl"
$stash->set('password_complexity', $stash->get(['Param', [ 'password_complexity' ]]));
#line 116 "template/en/default/admin/users/userdata.html.tmpl"
if ($stash->get('editusers')) {
#line 88 "template/en/default/admin/users/userdata.html.tmpl"
if ($stash->get(['user', 0, 'authorizer', 0, 'can_change_password', 0])) {
$output .=  "\n  <tr>\n    <th><label for=\"password\">Password:</label></th>\n    <td>\n      <input type=\"password\" size=\"16\" name=\"password\" id=\"password\"\n             value=\"\" autocomplete=\"off\" ";
#line 75 "template/en/default/admin/users/userdata.html.tmpl"
if (! $stash->get('editform')) {
$output .=  'required';
}

$output .=  ">";
#line 82 "template/en/default/admin/users/userdata.html.tmpl"
if ($stash->get('password_complexity') eq 'mixed_letters') {
$output .=  " \n        (Password must contain at least one UPPER and one lowercase letter.)";
}
elsif ($stash->get('password_complexity') eq 'letters_numbers') {
$output .=  " \n        (Password must contain at least one UPPER and one lower case letter and a number.)";
}
elsif ($stash->get('password_complexity') eq 'letters_numbers_specialchars') {
$output .=  " \n        (Password must contain at least one letter, a number and a special character.)";
}

#line 85 "template/en/default/admin/users/userdata.html.tmpl"
if ($stash->get('editform')) {
$output .=  "<br>\n        (Enter new password to change.)";
}

$output .=  "\n    </td>\n  </tr>";
}

$output .=  "\n  <tr>\n    <th><label for=\"disable_mail\">";
#line 90 "template/en/default/admin/users/userdata.html.tmpl"
$output .=  $stash->get(['terms', 0, 'Bug', 0]);
$output .=  "mail Disabled:</label></th>\n    <td>\n      <input type=\"checkbox\" name=\"disable_mail\" id=\"disable_mail\" value=\"1\" ";
#line 93 "template/en/default/admin/users/userdata.html.tmpl"
if ($stash->get(['otheruser', 0, 'email_disabled', 0])) {
$output .=  " checked=\"checked\" ";
}

$output .=  " \n             onchange=\"disable_mail_manually_set=1;\">\n      (This affects ";
#line 95 "template/en/default/admin/users/userdata.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  "mail and whinemail, not password-reset or other \n      non-";
#line 96 "template/en/default/admin/users/userdata.html.tmpl"
$output .=  $stash->get(['terms', 0, 'bug', 0]);
$output .=  "-related emails)\n    </td>\n  </tr>\n  <tr>\n    <th><label for=\"disabledtext\">Disable text:</label></th>\n    <td>";
#line 102 "template/en/default/admin/users/userdata.html.tmpl"
$output .=  $context->include('global/textarea.html.tmpl', { 'name' => 'disabledtext', 'id' => 'disabledtext', 'minrows' => 2, 'maxrows' => 10, 'defaultrows' => 10, 'cols' => 60, 'defaultcontent' => $stash->get(['otheruser', 0, 'disabledtext', 0]), 'onchange' => 'userDisabledTextOnChange(this);' });
$output .=  "<br>\n      (If non-empty, then it will not be possible to log in using this account,\n      and this text should explain why.)\n    </td>\n  </tr>";
}

#line 125 "template/en/default/admin/users/userdata.html.tmpl"
if (!($stash->get('editform'))) {
$output .=  "\n  <tr>\n    <th><label for=\"notify_user\">Notify User:</label></th>\n    <td>\n      <input type=\"checkbox\" name=\"notify_user\" id=\"notify_user\" value=\"1\">\n      (Email this user their account information. The password will not be included.)\n    </td>\n  </tr>";
}

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
